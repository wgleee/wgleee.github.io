<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>浅行</title>
  
  <subtitle>纸上得来终觉浅，绝知此事要躬行...</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wglee.org/"/>
  <updated>2019-02-27T01:53:21.754Z</updated>
  <id>https://wglee.org/</id>
  
  <author>
    <name>李王贵</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CentOS 7.x 配置 bond</title>
    <link href="https://wglee.org/2018/12/31/centos7-bond/"/>
    <id>https://wglee.org/2018/12/31/centos7-bond/</id>
    <published>2018-12-31T02:24:56.000Z</published>
    <updated>2019-02-27T01:53:21.754Z</updated>
    
    <content type="html"><![CDATA[<p><em>实验环境</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cat /etc/redhat-release</span></span><br><span class="line">CentOSLinux release 7.2.1511(Core)</span><br><span class="line">[root@localhost ~]<span class="comment"># uname -r</span></span><br><span class="line">3.10.0-327.el7.x86_64</span><br></pre></td></tr></table></figure><p><em>实验要求</em></p><p>linux 服务器 <code>eno33554960</code> 与 <code>eno50332184</code> 两张网卡配置 <code>bond</code> (如果要配置多个按照这个流程重复操作即可)</p><a id="more"></a><h2 id="配置-bond"><a href="#配置-bond" class="headerlink" title="配置 bond"></a>配置 bond</h2><h3 id="查看网卡信息"><a href="#查看网卡信息" class="headerlink" title="查看网卡信息"></a>查看网卡信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># ip addr</span></span><br><span class="line">1: lo:&lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN</span><br><span class="line">link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">inet 127.0.0.1/8 scope host lo</span><br><span class="line">valid_lft forever preferred_lft forever</span><br><span class="line">inet6 ::1/128 scope host</span><br><span class="line">valid_lft forever preferred_lft forever</span><br><span class="line">2: eno16777736:&lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP qlen 1000</span><br><span class="line">link/ether 00:0c:29:07:2c:86 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">inet 192.168.92.11/24 brd 192.168.92.255 scope global eno16777736</span><br><span class="line">valid_lft forever preferred_lft forever</span><br><span class="line">inet6 fe80::20c:29ff:fe07:2c86/64 scope link</span><br><span class="line">valid_lft forever preferred_lft forever</span><br><span class="line">3: eno33554960:&lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP qlen 1000</span><br><span class="line">link/ether 00:0c:29:07:2c:90 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">4: eno50332184:&lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP qlen 1000</span><br><span class="line">link/ether 00:0c:29:07:2c:9a brd ff:ff:ff:ff:ff:ff</span><br></pre></td></tr></table></figure><h3 id="备份网卡配置文件"><a href="#备份网卡配置文件" class="headerlink" title="备份网卡配置文件"></a>备份网卡配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cd /etc/sysconfig/network-scripts/</span></span><br><span class="line">[root@localhost network-scripts]<span class="comment"># mkdir /tmp/net_bak</span></span><br><span class="line">[root@localhost network-scripts]<span class="comment"># cp ifcfg-*/tmp/net_bak/</span></span><br><span class="line">[root@localhost network-scripts]<span class="comment"># ls /tmp/net_bak/</span></span><br><span class="line">ifcfg-eno16777736 ifcfg-eno33554960 ifcfg-eno50332184 ifcfg-eno67109408 ifcfg-eno83886632 ifcfg-lo</span><br></pre></td></tr></table></figure><h3 id="使用nmcli命令配置bond"><a href="#使用nmcli命令配置bond" class="headerlink" title="使用nmcli命令配置bond"></a>使用<code>nmcli</code>命令配置<code>bond</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成bond配置文件</span></span><br><span class="line">[root@localhost network-scripts]<span class="comment"># nmcli connection add type bond ifname bond0 mode 1</span></span><br><span class="line"><span class="comment"># 将网卡`eno33554960`与`eno50332184`绑定到bond0</span></span><br><span class="line">[root@localhost network-scripts]<span class="comment"># nmcli connection add type bond-slave ifname eno33554960 master bond0</span></span><br><span class="line">[root@localhost network-scripts]<span class="comment"># nmcli connection add type bond-slave ifname eno50332184 master bond0</span></span><br><span class="line"><span class="comment"># 查看生成的配置文件</span></span><br><span class="line">[root@localhost network-scripts]<span class="comment"># ls ifcfg-bond-*</span></span><br><span class="line">ifcfg-bond-bond0 ifcfg-bond-slave-eno33554960 ifcfg-bond-slave-eno50332184</span><br></pre></td></tr></table></figure><p><strong>bond 的 mode 如下：</strong></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">balance-rr      (<span class="number">0</span>) 轮询模式，负载均衡（bond默认的模式）</span><br><span class="line">active-backup (<span class="number">1</span>) 主备模式（常用）</span><br><span class="line">balance-xor (<span class="number">2</span>)</span><br><span class="line">broadcast       (<span class="number">3</span>）</span><br><span class="line"><span class="number">802.3</span>ad         (<span class="number">4</span>) 聚合模式</span><br><span class="line">balance-tlb (<span class="number">5</span>)</span><br><span class="line">balance-alb (<span class="number">6</span>)</span><br></pre></td></tr></table></figure><h3 id="修改bond0网卡配置"><a href="#修改bond0网卡配置" class="headerlink" title="修改bond0网卡配置"></a>修改bond0网卡配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost network-scripts]<span class="comment"># vim ifcfg-bond-bond0</span></span><br><span class="line">DEVICE=bond0</span><br><span class="line">BONDING_OPTS=mode=active-backup</span><br><span class="line">TYPE=Bond</span><br><span class="line">BONDING_MASTER=yes</span><br><span class="line">BOOTPROTO=static<span class="comment"># 将 dhcp 改为static</span></span><br><span class="line">DEFROUTE=yes</span><br><span class="line">PEERDNS=yes</span><br><span class="line">PEERROUTES=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_PEERDNS=yes</span><br><span class="line">IPV6_PEERROUTES=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">NAME=bond-bond0</span><br><span class="line">UUID=af2d6662-608c-4f5d-8018-1984cc3d87ef</span><br><span class="line">ONBOOT=yes</span><br><span class="line">IPADDR=192.168.92.20<span class="comment"># 配置 IP 地址</span></span><br><span class="line">PREFIX=24<span class="comment"># 配置掩码 也可以使用 NETMASK=255.255.255.0</span></span><br><span class="line">GATEWAY=192.168.92.2<span class="comment"># 配置网关</span></span><br></pre></td></tr></table></figure><div class="note info"><p>如果不想修改bond网络接口配置文件可以在第2步的第一条命令后加上 <code>ip4</code> “ip地址” <code>gw4</code> “网关地址”</p><pre><code>nmcli connection add type bond ifname bond0 mode 1 ip4 192.168.92.20/24 gw4 192.168.92.2</code></pre></div><h3 id="重启网络，验证配置结果"><a href="#重启网络，验证配置结果" class="headerlink" title="重启网络，验证配置结果"></a>重启网络，验证配置结果</h3><p><em>查看网卡信息</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost network-scripts]<span class="comment"># ip addr show</span></span><br><span class="line">1: lo:&lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN</span><br><span class="line">link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">inet 127.0.0.1/8 scope host lo</span><br><span class="line">valid_lft forever preferred_lft forever</span><br><span class="line">inet6 ::1/128 scope host</span><br><span class="line">valid_lft forever preferred_lft forever</span><br><span class="line">2: eno16777736:&lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP qlen 1000</span><br><span class="line">link/ether 00:0c:29:07:2c:86 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">inet 192.168.92.11/24 brd 192.168.92.255 scope global eno16777736</span><br><span class="line">valid_lft forever preferred_lft forever</span><br><span class="line">inet6 fe80::20c:29ff:fe07:2c86/64 scope link</span><br><span class="line">valid_lft forever preferred_lft forever</span><br><span class="line">3: eno33554960:&lt;BROADCAST,MULTICAST,SLAVE,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast master bond0 state UP qlen 1000</span><br><span class="line">link/ether 00:0c:29:07:2c:90 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">4: eno50332184:&lt;BROADCAST,MULTICAST,SLAVE,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast master bond0 state UP qlen 1000</span><br><span class="line">link/ether 00:0c:29:07:2c:90 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">31: bond0:&lt;BROADCAST,MULTICAST,MASTER,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP</span><br><span class="line">link/ether 00:0c:29:07:2c:90 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">inet 192.168.92.20/24 brd 192.168.92.255 scope global bond0</span><br><span class="line">valid_lft forever preferred_lft forever</span><br><span class="line">inet6 fe80::20c:29ff:fe07:2c90/64 scope link</span><br><span class="line">valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure><p><em>查看bond信息</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost network-scripts]<span class="comment"># cat /proc/net/bonding/bond0</span></span><br><span class="line">EthernetChannelBondingDriver: v3.7.1(April27,2011)</span><br><span class="line">BondingMode: fault-tolerance (active-backup)===&gt; bond主备模式</span><br><span class="line">PrimarySlave:None</span><br><span class="line">CurrentlyActiveSlave: eno33554960 ===&gt;当前激活的网卡eno33554960</span><br><span class="line">MII Status: up</span><br><span class="line">MII PollingInterval(ms):100</span><br><span class="line">UpDelay(ms):0</span><br><span class="line">DownDelay(ms):0</span><br><span class="line">SlaveInterface: eno33554960 ===&gt; bond0 组内的网卡</span><br><span class="line">MII Status: up</span><br><span class="line">Speed:1000Mbps</span><br><span class="line">Duplex: full</span><br><span class="line">LinkFailureCount:0</span><br><span class="line">Permanent HW addr:00:0c:29:07:2c:90</span><br><span class="line">Slave queue ID:0</span><br><span class="line">SlaveInterface: eno50332184 ===&gt; bond0 组内的网卡</span><br><span class="line">MII Status: up</span><br><span class="line">Speed:1000Mbps</span><br><span class="line">Duplex: full</span><br><span class="line">LinkFailureCount:0</span><br><span class="line">Permanent HW addr:00:0c:29:07:2c:9a</span><br><span class="line">Slave queue ID:0</span><br></pre></td></tr></table></figure><h2 id="删除-bond-设备"><a href="#删除-bond-设备" class="headerlink" title="删除 bond 设备"></a>删除 bond 设备</h2><p>当我们需要删除bond设备的时候,该如何删除呢？请看下面操作</p><p><em>查看网络设备</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># ls /sys/class/net/</span></span><br><span class="line">bond0 bond1 bonding_masters eno16777736 eno33554960 eno50332184 eno67109408 eno83886632 lo</span><br></pre></td></tr></table></figure><p><em>删除bond网络设备</em></p><p>直接删除 <code>bond0</code>，会提示无权限。 </p><p>可以通过 <code>bonding_masters</code> 文件删除 <code>bond</code> 设备, 由于 <code>bonding_masters</code> 文件是无法直接修改的，我们需要使用 <code>echo</code> 命令进行操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># echo -bond0 &gt;/sys/class/net/bonding_masters</span></span><br></pre></td></tr></table></figure><div class="note info"><p><code>echo</code> 后面的 <code>-</code> 是删除设备，<code>+</code> 是增加设备</p></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;em&gt;实验环境&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@localhost ~]&lt;span class=&quot;comment&quot;&gt;# cat /etc/redhat-release&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CentOSLinux release 7.2.1511(Core)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[root@localhost ~]&lt;span class=&quot;comment&quot;&gt;# uname -r&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3.10.0-327.el7.x86_64&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;实验要求&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;linux 服务器 &lt;code&gt;eno33554960&lt;/code&gt; 与 &lt;code&gt;eno50332184&lt;/code&gt; 两张网卡配置 &lt;code&gt;bond&lt;/code&gt; (如果要配置多个按照这个流程重复操作即可)&lt;/p&gt;
    
    </summary>
    
      <category term="linux" scheme="https://wglee.org/categories/linux/"/>
    
    
      <category term="双网卡绑定" scheme="https://wglee.org/tags/%E5%8F%8C%E7%BD%91%E5%8D%A1%E7%BB%91%E5%AE%9A/"/>
    
  </entry>
  
  <entry>
    <title>CentOS 6.x 配置 bond</title>
    <link href="https://wglee.org/2018/12/31/centos6-bond/"/>
    <id>https://wglee.org/2018/12/31/centos6-bond/</id>
    <published>2018-12-31T02:24:50.000Z</published>
    <updated>2019-02-27T01:53:21.754Z</updated>
    
    <content type="html"><![CDATA[<p><code>CentOS 6</code> 下使用双网卡配置 <code>bond0</code>, <code>CentOS 6</code> <code>bond</code> 配置不需要在 <code>/etc/modprobe</code> 中定义 <code>bond</code> 直接在网卡中定义 <code>BONDING_OPTS</code> 即可,例如 bond0: <code>BONDING_OPTS=&quot;mode=0 miimon=100&quot;</code></p><a id="more"></a><h2 id="物理网卡-eth0-eth1-绑定为-bond0"><a href="#物理网卡-eth0-eth1-绑定为-bond0" class="headerlink" title="物理网卡 eth0 eth1 绑定为 bond0"></a>物理网卡 eth0 eth1 绑定为 bond0</h2><h3 id="物理网卡配置"><a href="#物理网卡配置" class="headerlink" title="物理网卡配置"></a>物理网卡配置</h3><p><em>ifcfg-eth0</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">DEVICE=eth0</span><br><span class="line">ONBOOT=yes</span><br><span class="line">BOOTPROTO=none</span><br><span class="line">MASTER=bond0</span><br><span class="line">SLAVE=yes</span><br></pre></td></tr></table></figure><p><em>ifcfg-eth1</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">DEVICE=eth1</span><br><span class="line">ONBOOT=yes</span><br><span class="line">BOOTPROTO=none</span><br><span class="line">MASTER=bond0</span><br><span class="line">SLAVE=yes</span><br></pre></td></tr></table></figure><h3 id="bond0-网卡配置"><a href="#bond0-网卡配置" class="headerlink" title="bond0 网卡配置"></a>bond0 网卡配置</h3><p><em>ifcfg-bond0</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">DEVICE=bond0</span><br><span class="line">ONBOOT=yes</span><br><span class="line">BOOTPROTO=none</span><br><span class="line">IPADDR=xx.xx.xx.xx</span><br><span class="line">NETMASK=xx.xx.xx.xx</span><br><span class="line">GATEWAY=xx.xx.xx.xx</span><br><span class="line">DNS1=xx.xx.xx.xx</span><br><span class="line">BONDING_OPTS=<span class="string">"mode=0 miimon=100"</span></span><br></pre></td></tr></table></figure><p><em>重启网卡</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service network restart</span><br></pre></td></tr></table></figure><h3 id="查看-bond0-网卡状态"><a href="#查看-bond0-网卡状态" class="headerlink" title="查看 bond0 网卡状态"></a>查看 bond0 网卡状态</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost network-scripts]<span class="comment"># cat /proc/net/bonding/bond0</span></span><br><span class="line">EthernetChannelBondingDriver: v3.7.1(April27,2011)</span><br><span class="line">BondingMode: load balancing (round-robin)</span><br><span class="line">MII Status: up</span><br><span class="line">MII PollingInterval(ms):100</span><br><span class="line">UpDelay(ms):0</span><br><span class="line">DownDelay(ms):0</span><br><span class="line">SlaveInterface: eth1</span><br><span class="line">MII Status: up</span><br><span class="line">Speed:1000Mbps</span><br><span class="line">Duplex: full</span><br><span class="line">LinkFailureCount:0</span><br><span class="line">Permanent HW addr:00:0c:29:a1:34:eb</span><br><span class="line">Slave queue ID:0</span><br><span class="line">SlaveInterface: eth2</span><br><span class="line">MII Status: up</span><br><span class="line">Speed:1000Mbps</span><br><span class="line">Duplex: full</span><br><span class="line">LinkFailureCount:0</span><br><span class="line">Permanent HW addr:00:0c:29:a1:34:e1</span><br><span class="line">Slave queue ID:0</span><br></pre></td></tr></table></figure><div class="note info"><p>日志可以使用 <code>tailf /var/log/messages</code> 实时查看</p></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;CentOS 6&lt;/code&gt; 下使用双网卡配置 &lt;code&gt;bond0&lt;/code&gt;, &lt;code&gt;CentOS 6&lt;/code&gt; &lt;code&gt;bond&lt;/code&gt; 配置不需要在 &lt;code&gt;/etc/modprobe&lt;/code&gt; 中定义 &lt;code&gt;bond&lt;/code&gt; 直接在网卡中定义 &lt;code&gt;BONDING_OPTS&lt;/code&gt; 即可,例如 bond0: &lt;code&gt;BONDING_OPTS=&amp;quot;mode=0 miimon=100&amp;quot;&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="linux" scheme="https://wglee.org/categories/linux/"/>
    
    
      <category term="双网卡绑定" scheme="https://wglee.org/tags/%E5%8F%8C%E7%BD%91%E5%8D%A1%E7%BB%91%E5%AE%9A/"/>
    
  </entry>
  
  <entry>
    <title>NGINX 虚拟目录</title>
    <link href="https://wglee.org/2018/12/30/nginx-alias/"/>
    <id>https://wglee.org/2018/12/30/nginx-alias/</id>
    <published>2018-12-30T06:48:43.000Z</published>
    <updated>2019-02-27T01:53:21.755Z</updated>
    
    <content type="html"><![CDATA[<p>NGINX 是通过 <code>alias</code> 设置虚拟目录，在 NGINX 的配置中， <code>alias</code> 指令和 <code>root</code> 指令是有区别的</p><pre><code>1. alias 指定的目录是准确的，即 location 匹配访问的 path 目录下的文件直接是在 alias 目录下查找的；2. root指定的目录是location匹配访问的path目录的上一级目录,这个 path 目录一定要是真实存在root指定目录下的；3. 使用 alias 标签的目录块中不能使用 rewrite 的 break（具体原因不明）；另外， alias 指定的目录后面必须要加上 &quot;/&quot; 符号！4. alias 虚拟目录配置中，location匹配的path目录如果后面不带 &quot;/&quot; ，那么访问的url地址中这个path目录后面加不加 &quot;/&quot; 不影响访问，访问时它会自动加上 &quot;/&quot; ； 但是如果location匹配的path目录后面加上 &quot;/&quot;，那么访问的url地址中这个path目录必须要加上 &quot;/&quot;，访问时它不会自动加上 &quot;/&quot;。如果不加上&quot;/&quot;，访问就会失败！5. root目录配置中，location 匹配的 path 目录后面带不带 &quot;/&quot;，都不会影响访问。</code></pre><a id="more"></a><p><strong>举例说明（比如 nginx 配置的域名是 wglee.org）</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location <span class="regexp">/huan/</span> &#123;</span><br><span class="line">    alias <span class="regexp">/home/</span>www<span class="regexp">/huan/</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在上面 <code>alias</code> 虚拟目录配置下，访问 <code>http://wglee.org/huan/a.html</code> 实际指定的是 <code>/home/www/huan/a.html</code>。</p><blockquote><p>注意: alias 指定的目录后面必须要加上”/“，即 <code>/home/www/huan/</code> 不能改成 <code>/home/www/huan</code></p></blockquote><p><strong>上面的配置也可以改成 <code>root</code> 指令配置，如下</strong></p><p>这样 nginx 就会去 <code>/home/www/huan</code> 下寻找 <code>http://wglee.org/huan/a.html</code> 资源，两者配置后的访问效果是一样的！</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">location</span> <span class="title">/huan</span>/ &#123;</span><br><span class="line">    root /home/www/;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;NGINX 是通过 &lt;code&gt;alias&lt;/code&gt; 设置虚拟目录，在 NGINX 的配置中， &lt;code&gt;alias&lt;/code&gt; 指令和 &lt;code&gt;root&lt;/code&gt; 指令是有区别的&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1. alias 指定的目录是准确的，即 location 匹配访问的 path 目录下的文件直接是在 alias 目录下查找的；
2. root指定的目录是location匹配访问的path目录的上一级目录,这个 path 目录一定要是真实存在root指定目录下的；
3. 使用 alias 标签的目录块中不能使用 rewrite 的 break（具体原因不明）；另外， alias 指定的目录后面必须要加上 &amp;quot;/&amp;quot; 符号！
4. alias 虚拟目录配置中，location匹配的path目录如果后面不带 &amp;quot;/&amp;quot; ，那么访问的url地址中这个path目录后面加不加 &amp;quot;/&amp;quot; 不影响访问，访问时它会自动加上 &amp;quot;/&amp;quot; ； 但是如果location匹配的path目录后面加上 &amp;quot;/&amp;quot;，那么访问的url地址中这个path目录必须要加上 &amp;quot;/&amp;quot;，访问时它不会自动加上 &amp;quot;/&amp;quot;。如果不加上&amp;quot;/&amp;quot;，访问就会失败！
5. root目录配置中，location 匹配的 path 目录后面带不带 &amp;quot;/&amp;quot;，都不会影响访问。
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="nginx" scheme="https://wglee.org/categories/nginx/"/>
    
    
      <category term="nginx" scheme="https://wglee.org/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>ZABBIX 监控 NGINX</title>
    <link href="https://wglee.org/2018/12/18/zabbix-nginx/"/>
    <id>https://wglee.org/2018/12/18/zabbix-nginx/</id>
    <published>2018-12-18T03:40:31.000Z</published>
    <updated>2019-02-27T01:53:21.757Z</updated>
    
    <content type="html"><![CDATA[<p>在实际工作生产环境中使用了 <span class="exturl" data-url="aHR0cHM6Ly93d3cuemFiYml4LmNvbS8=" title="https://www.zabbix.com/">Zabbix<i class="fa fa-external-link"></i></span> 监控平台监控所有服务器的性能及资源使用情况，但官方自带的监控项并不能满足我们工作中的要求，不过幸好 <span class="exturl" data-url="aHR0cHM6Ly93d3cuemFiYml4LmNvbS8=" title="https://www.zabbix.com/">Zabbix<i class="fa fa-external-link"></i></span> 能够灵活的支持各种脚本程序进行扩展监控，本文就将介绍如何利用 <span class="exturl" data-url="aHR0cHM6Ly93d3cuemFiYml4LmNvbS8=" title="https://www.zabbix.com/">Zabbix<i class="fa fa-external-link"></i></span> 监控 NGINX 各项性能指标及实时监控各站点的 HTTP 状态码</p><a id="more"></a><h2 id="配置-nginx"><a href="#配置-nginx" class="headerlink" title="配置 nginx"></a>配置 nginx</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">local</span>&gt; <span class="built_in">cd</span> /usr/<span class="built_in">local</span>/nginx/vhost</span><br><span class="line"><span class="built_in">local</span>&gt; cat &gt; nginx_status.conf</span><br><span class="line">server &#123;</span><br><span class="line">    listen 80 default;</span><br><span class="line">    server_name localhost;</span><br><span class="line">    index index.html index.htm;</span><br><span class="line">    access_log off;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        <span class="built_in">return</span> 444;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location /nginx_status &#123;</span><br><span class="line">        stub_status on;</span><br><span class="line">        auth_basic <span class="string">"nginx status"</span>;</span><br><span class="line">        allow 127.0.0.1;</span><br><span class="line">        deny all;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info"><p>nginx 编译时需要添加 <code>--with-http_stub_status_module</code> 模块</p></div><h2 id="编写-zabbix-监控脚本"><a href="#编写-zabbix-监控脚本" class="headerlink" title="编写 zabbix 监控脚本"></a>编写 zabbix 监控脚本</h2><p><strong>nginx 状态监控脚本: <code>nginx_status.sh</code></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">NGINX_STATUS=<span class="string">'http://127.0.0.1/nginx_status'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> ping &#123;</span><br><span class="line">    /sbin/pidof nginx &amp;&gt;/dev/null &amp;&amp; <span class="built_in">echo</span> 1 || <span class="built_in">echo</span> 0</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> active &#123;</span><br><span class="line">    /usr/bin/curl -s <span class="string">"<span class="variable">$NGINX_STATUS</span>"</span> | grep <span class="string">'Active'</span> | awk <span class="string">'&#123;print $NF&#125;'</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> reading &#123;</span><br><span class="line">    /usr/bin/curl -s <span class="string">"<span class="variable">$NGINX_STATUS</span>"</span> | grep <span class="string">'Reading'</span> | awk <span class="string">'&#123;print $2&#125;'</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> writing &#123;</span><br><span class="line">    /usr/bin/curl -s <span class="string">"<span class="variable">$NGINX_STATUS</span>"</span> | grep <span class="string">'Writing'</span> | awk <span class="string">'&#123;print $4&#125;'</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> waiting &#123;</span><br><span class="line">    /usr/bin/curl -s <span class="string">"<span class="variable">$NGINX_STATUS</span>"</span> | grep <span class="string">'Waiting'</span> | awk <span class="string">'&#123;print $6&#125;'</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> accepts &#123;</span><br><span class="line">    /usr/bin/curl -s <span class="string">"<span class="variable">$NGINX_STATUS</span>"</span> | awk NR==3 | awk <span class="string">'&#123;print $1&#125;'</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> handled &#123;</span><br><span class="line">    /usr/bin/curl -s <span class="string">"<span class="variable">$NGINX_STATUS</span>"</span> | awk NR==3 | awk <span class="string">'&#123;print $2&#125;'</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> requests &#123;</span><br><span class="line">    /usr/bin/curl -s <span class="string">"<span class="variable">$NGINX_STATUS</span>"</span> | awk NR==3 | awk <span class="string">'&#123;print $3&#125;'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$1</span></span><br></pre></td></tr></table></figure><p><strong>nginx 日志自动发现脚本: <code>discovery_logfiles.py</code></strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/python</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> print_function</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">config_path = <span class="string">'/usr/local/nginx/conf/vhost'</span></span><br><span class="line">nginx_path = <span class="string">'/usr/local/nginx/'</span></span><br><span class="line">ignore = [<span class="string">'nginx_status.conf'</span>]</span><br><span class="line">logfiles = &#123;<span class="string">"data"</span>:[]&#125;</span><br><span class="line"></span><br><span class="line">configs = [os.path.join(config_path, f) <span class="keyword">for</span> f <span class="keyword">in</span> os.listdir(config_path)</span><br><span class="line">            <span class="keyword">if</span> f <span class="keyword">not</span> <span class="keyword">in</span> ignore]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_logfile</span><span class="params">(confile)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(confile) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line">            <span class="keyword">if</span> <span class="string">'access_log'</span> <span class="keyword">not</span> <span class="keyword">in</span> line:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> len(line.strip(<span class="string">';'</span>).split()) == <span class="number">2</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            logfile = line.strip(<span class="string">';'</span>).split()[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">if</span> logfile.startswith(<span class="string">'logs'</span>):</span><br><span class="line">        logfile = os.path.join(nginx_path, logfile)</span><br><span class="line">    <span class="keyword">if</span> os.path.isfile(logfile):</span><br><span class="line">        appname = os.path.basename(confile).split(<span class="string">'.'</span>)[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">return</span> logfiles[<span class="string">'data'</span>].append(&#123;<span class="string">"&#123;#LOGFILE&#125;"</span>: logfile, <span class="string">"&#123;#APPNAME&#125;"</span>: appname&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> config <span class="keyword">in</span> configs:</span><br><span class="line">    get_logfile(config)</span><br><span class="line"></span><br><span class="line">print(json.dumps(logfiles))</span><br></pre></td></tr></table></figure><p><strong>上传监控脚本至: /usr/local/zabbix/scripts</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">local</span>&gt; mkdir /usr/<span class="built_in">local</span>/zabbix/scripts</span><br><span class="line"><span class="built_in">local</span>&gt; <span class="built_in">cd</span> /usr/<span class="built_in">local</span>/zabbix/scripts</span><br><span class="line"><span class="comment"># 上传监控脚本到此目录下并添加执行权限 `chmod +x`</span></span><br></pre></td></tr></table></figure><h2 id="配置-zabbix-agent"><a href="#配置-zabbix-agent" class="headerlink" title="配置 zabbix-agent"></a>配置 zabbix-agent</h2><p><strong>修改 <code>zabbix_agentd.conf</code> 配置文件，添加以下配置</strong></p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Include</span>=<span class="regexp">/usr/</span>local<span class="regexp">/zabbix/</span>etc<span class="regexp">/zabbix_agentd.conf.d/</span>*.conf</span><br></pre></td></tr></table></figure><p><strong>添加自定义监控项</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">local</span>&gt; <span class="built_in">cd</span> /usr/<span class="built_in">local</span>/zabbix/etc/zabbix_agentd.conf.d</span><br><span class="line"><span class="built_in">local</span>&gt; cat nginx_userparameter.conf</span><br><span class="line">UserParameter=nginx.status[*],/usr/<span class="built_in">local</span>/zabbix/scripts/nginx_status.sh <span class="variable">$1</span></span><br><span class="line">UserParameter=nginx.discovery,/usr/bin/python /usr/<span class="built_in">local</span>/zabbix/scripts/discovery_logfiles.py</span><br><span class="line">UserParameter=nginx.status_code[*],/bin/grep <span class="string">"<span class="variable">$(date +'\[%d/%b/%Y:%H:%M:')</span>"</span> <span class="string">"<span class="variable">$1</span>"</span> | /bin/grep -o <span class="string">"HTTP/[1-2].[0-1]\" <span class="variable">$2</span>"</span> | wc -l</span><br></pre></td></tr></table></figure><p><strong>重启 zabbix-agten</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/etc/i</span>nit.d<span class="regexp">/zabbix_agentd restart</span></span><br></pre></td></tr></table></figure><h2 id="添加监控模板"><a href="#添加监控模板" class="headerlink" title="添加监控模板"></a>添加监控模板</h2><p><strong>创建 nginx 监控模板</strong></p><pre><code>1. 创建监控模板名称为: `Template App NGINX` 群组为: `Templates/Applications`2. 创建应用集名称为: nginx</code></pre><img src="/2018/12/18/zabbix-nginx/zabbix-1.jpg"><img src="/2018/12/18/zabbix-nginx/zabbix-1.1.jpg"><p><strong>创建自动发现规则</strong></p><pre><code>1. 点击自动发现规则2. 创建自动发现规则3. 键值输入: `nginx.discovery`4. 间隔为1小时5. 配置过滤器 (如图所示)</code></pre><img src="/2018/12/18/zabbix-nginx/zabbix-2.jpg"><img src="/2018/12/18/zabbix-nginx/zabbix-3.jpg"><p><strong>创建 nginx http 状态码监控项：添加监控原型</strong></p><pre><code>1. 监控原型2. 创建监控项原型3. 例如: 创建监控 `503` 状态码监控项, 其他状态码监控配置只需将 `503` 改为相应的状态码即可</code></pre><img src="/2018/12/18/zabbix-nginx/zabbix-4.jpg"><p><strong>创建 nginx 状态监控项</strong></p><pre><code>1. 打开 nginx 监控模板2. 点击监控项3. 创建监控项</code></pre><img src="/2018/12/18/zabbix-nginx/zabbix-5.jpg"><img src="/2018/12/18/zabbix-nginx/zabbix-6.jpg">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在实际工作生产环境中使用了 &lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly93d3cuemFiYml4LmNvbS8=&quot; title=&quot;https://www.zabbix.com/&quot;&gt;Zabbix&lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt;&lt;/span&gt; 监控平台监控所有服务器的性能及资源使用情况，但官方自带的监控项并不能满足我们工作中的要求，不过幸好 &lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly93d3cuemFiYml4LmNvbS8=&quot; title=&quot;https://www.zabbix.com/&quot;&gt;Zabbix&lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt;&lt;/span&gt; 能够灵活的支持各种脚本程序进行扩展监控，本文就将介绍如何利用 &lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly93d3cuemFiYml4LmNvbS8=&quot; title=&quot;https://www.zabbix.com/&quot;&gt;Zabbix&lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt;&lt;/span&gt; 监控 NGINX 各项性能指标及实时监控各站点的 HTTP 状态码&lt;/p&gt;
    
    </summary>
    
      <category term="zabbix" scheme="https://wglee.org/categories/zabbix/"/>
    
    
      <category term="zabbix" scheme="https://wglee.org/tags/zabbix/"/>
    
  </entry>
  
  <entry>
    <title>MYSQL GTID 主从同步出错解决方法</title>
    <link href="https://wglee.org/2018/12/12/mysql-gtid/"/>
    <id>https://wglee.org/2018/12/12/mysql-gtid/</id>
    <published>2018-12-12T03:06:38.000Z</published>
    <updated>2019-02-27T01:53:21.754Z</updated>
    
    <content type="html"><![CDATA[<p>GTID是MYSQL 5.6的新特性，其全称是Global Transaction Identifier，可简化MYSQL的主从切换以及Failover。GTID用于在binlog中唯一标识一个事务。当事务提交时，MYSQL Server在写binlog的时候，会先写一个特殊的Binlog Event，类型为GTID_Event，指定下一个事务的GTID，然后再写事务的Binlog。主从同步时GTID_Event和事务的Binlog都会传递到从库，从库在执行的时候也是用同样的GTID写binlog，这样主从同步以后，就可通过GTID确定从库同步到的位置了。也就是说，无论是级联情况，还是一主多从情况，都可以通过GTID自动找点儿，而无需像之前那样通过 File_name 和File_position 找点儿了</p><a id="more"></a><div class="note info no-icon"><p>环境: 两台 MYSQL 5.6.27 数据库使用 gtid 做了主从同步<br>原因: 由于从库没有限制好权限开发人员在从库插入数据从而导致主从同步失效</p></div><h2 id="查看主从同步状态"><a href="#查看主从同步状态" class="headerlink" title="查看主从同步状态"></a>查看主从同步状态</h2><h3 id="主库状态"><a href="#主库状态" class="headerlink" title="主库状态"></a>主库状态</h3><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show master status;</span><br><span class="line"><span class="code">+--------------+</span>----------<span class="code">+--------------+</span>------------------<span class="code">+-------------------------------------------+</span></span><br><span class="line">| File         | Position | Binlog<span class="emphasis">_Do_</span>DB | Binlog<span class="emphasis">_Ignore_</span>DB | Executed<span class="emphasis">_Gtid_</span>Set                         |</span><br><span class="line"><span class="code">+--------------+</span>----------<span class="code">+--------------+</span>------------------<span class="code">+-------------------------------------------+</span></span><br><span class="line">| mysql.000002 |     3541 |              | mysql            | 69231693-651b-11e6-a629-000c29b2535c:1-14 |</span><br><span class="line"><span class="code">+--------------+</span>----------<span class="code">+--------------+</span>------------------<span class="code">+-------------------------------------------+</span></span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><h3 id="从库状态"><a href="#从库状态" class="headerlink" title="从库状态"></a>从库状态</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">mysql&gt;</span> <span class="string">show</span> <span class="string">slave</span> <span class="string">status\G</span></span><br><span class="line"><span class="string">***************************</span> <span class="number">1.</span> <span class="string">row</span> <span class="string">***************************</span></span><br><span class="line"><span class="attr">               Slave_IO_State:</span> <span class="string">Waiting</span> <span class="string">for</span> <span class="string">master</span> <span class="string">to</span> <span class="string">send</span> <span class="string">event</span></span><br><span class="line"><span class="attr">                  Master_Host:</span> <span class="number">192.168</span><span class="number">.80</span><span class="number">.10</span></span><br><span class="line"><span class="attr">                  Master_User:</span> <span class="string">repluser</span></span><br><span class="line"><span class="attr">                  Master_Port:</span> <span class="number">3306</span></span><br><span class="line"><span class="attr">                Connect_Retry:</span> <span class="number">60</span></span><br><span class="line"><span class="attr">              Master_Log_File:</span> <span class="string">mysql.000002</span></span><br><span class="line"><span class="attr">          Read_Master_Log_Pos:</span> <span class="number">3541</span></span><br><span class="line"><span class="attr">               Relay_Log_File:</span> <span class="string">mysqld-relay-bin.000002</span></span><br><span class="line"><span class="attr">                Relay_Log_Pos:</span> <span class="number">3743</span></span><br><span class="line"><span class="attr">        Relay_Master_Log_File:</span> <span class="string">mysql.000002</span></span><br><span class="line"><span class="attr">             Slave_IO_Running:</span> <span class="literal">Yes</span></span><br><span class="line"><span class="attr">            Slave_SQL_Running:</span> <span class="literal">Yes</span></span><br><span class="line"><span class="attr">              Replicate_Do_DB:</span></span><br><span class="line">          <span class="string">.........................</span></span><br><span class="line"><span class="attr">  Replicate_Ignore_Server_Ids:</span></span><br><span class="line"><span class="attr">             Master_Server_Id:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">                  Master_UUID:</span> <span class="number">69231693</span><span class="bullet">-651</span><span class="string">b-11e6-a629-000c29b2535c</span></span><br><span class="line"><span class="attr">             Master_Info_File:</span> <span class="string">mysql.slave_master_info</span></span><br><span class="line"><span class="attr">                    SQL_Delay:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">          SQL_Remaining_Delay:</span> <span class="literal">NULL</span></span><br><span class="line"><span class="attr">      Slave_SQL_Running_State:</span> <span class="string">Slave</span> <span class="string">has</span> <span class="string">read</span> <span class="string">all</span> <span class="string">relay</span> <span class="string">log;</span> <span class="string">waiting</span> <span class="string">for</span> <span class="string">the</span> <span class="string">slave</span> <span class="string">I/O</span> <span class="string">thread</span> <span class="string">to</span> <span class="string">update</span> <span class="string">it</span></span><br><span class="line"><span class="attr">           Master_Retry_Count:</span> <span class="number">86400</span></span><br><span class="line"><span class="attr">                  Master_Bind:</span></span><br><span class="line"><span class="attr">      Last_IO_Error_Timestamp:</span></span><br><span class="line"><span class="attr">     Last_SQL_Error_Timestamp:</span></span><br><span class="line"><span class="attr">               Master_SSL_Crl:</span></span><br><span class="line"><span class="attr">           Master_SSL_Crlpath:</span></span><br><span class="line"><span class="attr">           Retrieved_Gtid_Set:</span> <span class="number">69231693</span><span class="bullet">-651</span><span class="attr">b-11e6-a629-000c29b2535c:1-14</span></span><br><span class="line"><span class="attr">            Executed_Gtid_Set:</span> <span class="number">69231693</span><span class="bullet">-651</span><span class="attr">b-11e6-a629-000c29b2535c:1-14</span></span><br><span class="line"><span class="attr">                Auto_Position:</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="string">row</span> <span class="string">in</span> <span class="string">set</span> <span class="string">(0.00</span> <span class="string">sec)</span></span><br></pre></td></tr></table></figure><blockquote><p>可以看到主从状态是正常的，注意<code>Executed_Gtid_Set</code>参数</p></blockquote><h3 id="测试数据同步"><a href="#测试数据同步" class="headerlink" title="测试数据同步"></a>测试数据同步</h3><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">################ 操作主库 ################</span><br><span class="line">mysql&gt; show databases;</span><br><span class="line"><span class="code">+--------------------+</span></span><br><span class="line">| Database           |</span><br><span class="line"><span class="code">+--------------------+</span></span><br><span class="line">| information<span class="emphasis">_schema |</span></span><br><span class="line"><span class="emphasis">| mysql              |</span></span><br><span class="line"><span class="emphasis">| performance_</span>schema |</span><br><span class="line">| test               |</span><br><span class="line">| tmp                |</span><br><span class="line"><span class="code">+--------------------+</span></span><br><span class="line">5 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; use tmp;</span><br><span class="line">Database changed</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into test values(1,<span class="emphasis">'lily'</span>);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from test;</span><br><span class="line"><span class="code">+----+</span>------+</span><br><span class="line">| id | name |</span><br><span class="line"><span class="code">+----+</span>------+</span><br><span class="line">|  1 | lily |</span><br><span class="line"><span class="code">+----+</span>------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">################ 操作从库 ################</span><br><span class="line">mysql&gt; show databases;</span><br><span class="line"><span class="code">+--------------------+</span></span><br><span class="line">| Database           |</span><br><span class="line"><span class="code">+--------------------+</span></span><br><span class="line">| information<span class="emphasis">_schema |</span></span><br><span class="line"><span class="emphasis">| mysql              |</span></span><br><span class="line"><span class="emphasis">| performance_</span>schema |</span><br><span class="line">| test               |</span><br><span class="line">| tmp                |</span><br><span class="line"><span class="code">+--------------------+</span></span><br><span class="line">5 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; use tmp;</span><br><span class="line">Reading table information for completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">mysql&gt; show tables;</span><br><span class="line"><span class="code">+---------------+</span></span><br><span class="line">| Tables<span class="emphasis">_in_</span>tmp |</span><br><span class="line"><span class="code">+---------------+</span></span><br><span class="line">| test          |</span><br><span class="line"><span class="code">+---------------+</span></span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from test;</span><br><span class="line"><span class="code">+----+</span>------+</span><br><span class="line">| id | name |</span><br><span class="line"><span class="code">+----+</span>------+</span><br><span class="line">|  1 | lily |</span><br><span class="line"><span class="code">+----+</span>------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><blockquote><p>此时可以看到主从同步是正常的</p></blockquote><h2 id="模拟故障"><a href="#模拟故障" class="headerlink" title="模拟故障"></a>模拟故障</h2><h3 id="在从库的-tmp-库-test-表中增加一条数据"><a href="#在从库的-tmp-库-test-表中增加一条数据" class="headerlink" title="在从库的 tmp 库 test 表中增加一条数据"></a>在从库的 tmp 库 test 表中增加一条数据</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在插入数据前先看下从库的状态</span></span><br><span class="line"><span class="string">mysql&gt;</span> <span class="string">show</span> <span class="string">slave</span> <span class="string">status\G</span></span><br><span class="line"><span class="string">***************************</span> <span class="number">1.</span> <span class="string">row</span> <span class="string">***************************</span></span><br><span class="line"><span class="attr">               Slave_IO_State:</span> <span class="string">Waiting</span> <span class="string">for</span> <span class="string">master</span> <span class="string">to</span> <span class="string">send</span> <span class="string">event</span></span><br><span class="line"><span class="attr">                  Master_Host:</span> <span class="number">192.168</span><span class="number">.80</span><span class="number">.10</span></span><br><span class="line"><span class="attr">                  Master_User:</span> <span class="string">repluser</span></span><br><span class="line"><span class="attr">                  Master_Port:</span> <span class="number">3306</span></span><br><span class="line"><span class="attr">                Connect_Retry:</span> <span class="number">60</span></span><br><span class="line"><span class="attr">              Master_Log_File:</span> <span class="string">mysql.000002</span></span><br><span class="line"><span class="attr">          Read_Master_Log_Pos:</span> <span class="number">3842</span></span><br><span class="line"><span class="attr">               Relay_Log_File:</span> <span class="string">mysqld-relay-bin.000002</span></span><br><span class="line"><span class="attr">                Relay_Log_Pos:</span> <span class="number">4044</span></span><br><span class="line"><span class="attr">        Relay_Master_Log_File:</span> <span class="string">mysql.000002</span></span><br><span class="line"><span class="attr">             Slave_IO_Running:</span> <span class="literal">Yes</span></span><br><span class="line"><span class="attr">            Slave_SQL_Running:</span> <span class="literal">Yes</span></span><br><span class="line"><span class="attr">              Replicate_Do_DB:</span></span><br><span class="line">          <span class="string">.....................................</span></span><br><span class="line"><span class="attr">  Replicate_Ignore_Server_Ids:</span></span><br><span class="line"><span class="attr">             Master_Server_Id:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">                  Master_UUID:</span> <span class="number">69231693</span><span class="bullet">-651</span><span class="string">b-11e6-a629-000c29b2535c</span></span><br><span class="line"><span class="attr">             Master_Info_File:</span> <span class="string">mysql.slave_master_info</span></span><br><span class="line"><span class="attr">                    SQL_Delay:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">          SQL_Remaining_Delay:</span> <span class="literal">NULL</span></span><br><span class="line"><span class="attr">      Slave_SQL_Running_State:</span> <span class="string">Slave</span> <span class="string">has</span> <span class="string">read</span> <span class="string">all</span> <span class="string">relay</span> <span class="string">log;</span> <span class="string">waiting</span> <span class="string">for</span> <span class="string">the</span> <span class="string">slave</span> <span class="string">I/O</span> <span class="string">thread</span> <span class="string">to</span> <span class="string">update</span> <span class="string">it</span></span><br><span class="line"><span class="attr">           Master_Retry_Count:</span> <span class="number">86400</span></span><br><span class="line"><span class="attr">                  Master_Bind:</span></span><br><span class="line"><span class="attr">      Last_IO_Error_Timestamp:</span></span><br><span class="line"><span class="attr">     Last_SQL_Error_Timestamp:</span></span><br><span class="line"><span class="attr">               Master_SSL_Crl:</span></span><br><span class="line"><span class="attr">           Master_SSL_Crlpath:</span></span><br><span class="line"><span class="attr">           Retrieved_Gtid_Set:</span> <span class="number">69231693</span><span class="bullet">-651</span><span class="attr">b-11e6-a629-000c29b2535c:1-15</span></span><br><span class="line"><span class="attr">            Executed_Gtid_Set:</span> <span class="number">69231693</span><span class="bullet">-651</span><span class="attr">b-11e6-a629-000c29b2535c:1-15</span></span><br><span class="line"><span class="attr">                Auto_Position:</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="string">row</span> <span class="string">in</span> <span class="string">set</span> <span class="string">(0.00</span> <span class="string">sec)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 增加一条数据</span></span><br><span class="line"><span class="string">mysql&gt;</span> <span class="string">insert</span> <span class="string">into</span> <span class="string">test</span> <span class="string">values(2,'tom');</span></span><br><span class="line"><span class="string">Query</span> <span class="string">OK,</span> <span class="number">1</span> <span class="string">row</span> <span class="string">affected</span> <span class="string">(0.02</span> <span class="string">sec)</span></span><br><span class="line"><span class="comment"># 在查看从库状态</span></span><br><span class="line"><span class="string">mysql&gt;</span> <span class="string">show</span> <span class="string">slave</span> <span class="string">status\G</span></span><br><span class="line"><span class="string">***************************</span> <span class="number">1.</span> <span class="string">row</span> <span class="string">***************************</span></span><br><span class="line"><span class="attr">               Slave_IO_State:</span> <span class="string">Waiting</span> <span class="string">for</span> <span class="string">master</span> <span class="string">to</span> <span class="string">send</span> <span class="string">event</span></span><br><span class="line"><span class="attr">                  Master_Host:</span> <span class="number">192.168</span><span class="number">.80</span><span class="number">.10</span></span><br><span class="line"><span class="attr">                  Master_User:</span> <span class="string">repluser</span></span><br><span class="line"><span class="attr">                  Master_Port:</span> <span class="number">3306</span></span><br><span class="line"><span class="attr">                Connect_Retry:</span> <span class="number">60</span></span><br><span class="line"><span class="attr">              Master_Log_File:</span> <span class="string">mysql.000002</span></span><br><span class="line"><span class="attr">          Read_Master_Log_Pos:</span> <span class="number">3842</span></span><br><span class="line"><span class="attr">               Relay_Log_File:</span> <span class="string">mysqld-relay-bin.000002</span></span><br><span class="line"><span class="attr">                Relay_Log_Pos:</span> <span class="number">4044</span></span><br><span class="line"><span class="attr">        Relay_Master_Log_File:</span> <span class="string">mysql.000002</span></span><br><span class="line"><span class="attr">             Slave_IO_Running:</span> <span class="literal">Yes</span></span><br><span class="line"><span class="attr">            Slave_SQL_Running:</span> <span class="literal">Yes</span></span><br><span class="line"><span class="attr">              Replicate_Do_DB:</span></span><br><span class="line">          <span class="string">.........................................</span></span><br><span class="line"><span class="attr">  Replicate_Ignore_Server_Ids:</span></span><br><span class="line"><span class="attr">             Master_Server_Id:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">                  Master_UUID:</span> <span class="number">69231693</span><span class="bullet">-651</span><span class="string">b-11e6-a629-000c29b2535c</span></span><br><span class="line"><span class="attr">             Master_Info_File:</span> <span class="string">mysql.slave_master_info</span></span><br><span class="line"><span class="attr">                    SQL_Delay:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">          SQL_Remaining_Delay:</span> <span class="literal">NULL</span></span><br><span class="line"><span class="attr">      Slave_SQL_Running_State:</span> <span class="string">Slave</span> <span class="string">has</span> <span class="string">read</span> <span class="string">all</span> <span class="string">relay</span> <span class="string">log;</span> <span class="string">waiting</span> <span class="string">for</span> <span class="string">the</span> <span class="string">slave</span> <span class="string">I/O</span> <span class="string">thread</span> <span class="string">to</span> <span class="string">update</span> <span class="string">it</span></span><br><span class="line"><span class="attr">           Master_Retry_Count:</span> <span class="number">86400</span></span><br><span class="line"><span class="attr">                  Master_Bind:</span></span><br><span class="line"><span class="attr">      Last_IO_Error_Timestamp:</span></span><br><span class="line"><span class="attr">     Last_SQL_Error_Timestamp:</span></span><br><span class="line"><span class="attr">               Master_SSL_Crl:</span></span><br><span class="line"><span class="attr">           Master_SSL_Crlpath:</span></span><br><span class="line"><span class="attr">           Retrieved_Gtid_Set:</span> <span class="number">69231693</span><span class="bullet">-651</span><span class="attr">b-11e6-a629-000c29b2535c:1-15</span></span><br><span class="line"><span class="attr">            Executed_Gtid_Set:</span> <span class="number">29</span><span class="attr">d0bc3d-65a7-11e6-a9b8-000c29c171cb:1,</span></span><br><span class="line"><span class="number">69231693</span><span class="bullet">-651</span><span class="attr">b-11e6-a629-000c29b2535c:1-15</span></span><br><span class="line"><span class="attr">                Auto_Position:</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="string">row</span> <span class="string">in</span> <span class="string">set</span> <span class="string">(0.00</span> <span class="string">sec)</span></span><br></pre></td></tr></table></figure><blockquote><p>可以发现从库的<code>Executed_Gtid_Set:</code>由一条变成两条了</p></blockquote><h3 id="在次测试主从同步"><a href="#在次测试主从同步" class="headerlink" title="在次测试主从同步"></a>在次测试主从同步</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在主库 tmp 库的 test 表增加一条数据</span></span><br><span class="line"><span class="string">mysql&gt;</span> <span class="string">insert</span> <span class="string">into</span> <span class="string">test</span> <span class="string">values(2,'jom');</span></span><br><span class="line"><span class="string">Query</span> <span class="string">OK,</span> <span class="number">1</span> <span class="string">row</span> <span class="string">affected</span> <span class="string">(0.01</span> <span class="string">sec)</span></span><br><span class="line"></span><br><span class="line"><span class="string">mysql&gt;</span> <span class="string">select</span> <span class="string">*</span> <span class="string">from</span> <span class="string">test;</span></span><br><span class="line"><span class="string">+----+------+</span></span><br><span class="line"><span class="string">| id | name |</span></span><br><span class="line"><span class="string">+----+------+</span></span><br><span class="line"><span class="string">|  1 | lily |</span></span><br><span class="line"><span class="string">|  2 | jom  |</span></span><br><span class="line"><span class="string">+----+------+</span></span><br><span class="line"><span class="string">2 rows in set (0.00 sec)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 查看从库的表</span></span><br><span class="line"><span class="string">mysql&gt; select * from  test;</span></span><br><span class="line"><span class="string">+----+------+</span></span><br><span class="line"><span class="string">| id | name |</span></span><br><span class="line"><span class="string">+----+------+</span></span><br><span class="line"><span class="string">|  1 | lily |</span></span><br><span class="line"><span class="string">|  2 | tom  |</span></span><br><span class="line"><span class="string">+----+------+</span></span><br><span class="line"><span class="string">2 rows in set (0.00 sec)</span></span><br><span class="line"><span class="string"># 此时从库表中的数据没有改变</span></span><br><span class="line"><span class="string"># 在次查看从库状态</span></span><br><span class="line"><span class="string">mysql&gt; show slave status\G</span></span><br><span class="line"><span class="string">*************************** 1. row ***************************</span></span><br><span class="line"><span class="string"></span><span class="attr">               Slave_IO_State:</span> <span class="string">Waiting</span> <span class="string">for</span> <span class="string">master</span> <span class="string">to</span> <span class="string">send</span> <span class="string">event</span></span><br><span class="line"><span class="attr">                  Master_Host:</span> <span class="number">192.168</span><span class="number">.80</span><span class="number">.10</span></span><br><span class="line"><span class="attr">                  Master_User:</span> <span class="string">repluser</span></span><br><span class="line"><span class="attr">                  Master_Port:</span> <span class="number">3306</span></span><br><span class="line"><span class="attr">                Connect_Retry:</span> <span class="number">60</span></span><br><span class="line"><span class="attr">              Master_Log_File:</span> <span class="string">mysql.000002</span></span><br><span class="line"><span class="attr">          Read_Master_Log_Pos:</span> <span class="number">4141</span></span><br><span class="line"><span class="attr">               Relay_Log_File:</span> <span class="string">mysqld-relay-bin.000002</span></span><br><span class="line"><span class="attr">                Relay_Log_Pos:</span> <span class="number">4044</span></span><br><span class="line"><span class="attr">        Relay_Master_Log_File:</span> <span class="string">mysql.000002</span></span><br><span class="line"><span class="attr">             Slave_IO_Running:</span> <span class="literal">Yes</span></span><br><span class="line"><span class="attr">            Slave_SQL_Running:</span> <span class="literal">No</span></span><br><span class="line"><span class="attr">              Replicate_Do_DB:</span></span><br><span class="line"><span class="attr">          Replicate_Ignore_DB:</span> <span class="string">mysql</span></span><br><span class="line"><span class="attr">           Replicate_Do_Table:</span></span><br><span class="line"><span class="attr">       Replicate_Ignore_Table:</span></span><br><span class="line"><span class="attr">      Replicate_Wild_Do_Table:</span></span><br><span class="line"><span class="attr">  Replicate_Wild_Ignore_Table:</span></span><br><span class="line"><span class="attr">                   Last_Errno:</span> <span class="number">1062</span></span><br><span class="line"><span class="attr">                   Last_Error:</span> <span class="string">Worker</span> <span class="number">1</span> <span class="string">failed</span> <span class="string">executing</span> <span class="string">transaction</span> <span class="string">'69231693-651b-11e6-a629-000c29b2535c:16'</span> <span class="string">at</span> <span class="string">master</span> <span class="string">log</span> <span class="string">mysql.000002,</span> <span class="string">end_log_pos</span> <span class="number">4110</span><span class="string">;</span> <span class="string">Could</span> <span class="string">notexecute</span> <span class="string">Write_rows</span> <span class="string">event</span> <span class="string">on</span> <span class="string">table</span> <span class="string">tmp.test;</span> <span class="string">Duplicate</span> <span class="string">entry</span> <span class="string">'2'</span> <span class="string">for</span> <span class="string">key</span> <span class="string">'PRIMARY'</span><span class="string">,</span> <span class="attr">Error_code:</span> <span class="number">1062</span><span class="string">;</span> <span class="string">handler</span> <span class="string">error</span> <span class="string">HA_ERR_FOUND_DUPP_KEY;</span> <span class="string">the</span> <span class="string">event's</span> <span class="string">master</span> <span class="string">log</span> <span class="string">mysql.000002,</span> <span class="string">end_log_pos</span> <span class="number">4110</span></span><br><span class="line"><span class="attr">                 Skip_Counter:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">          Exec_Master_Log_Pos:</span> <span class="number">3842</span></span><br><span class="line"><span class="attr">              Relay_Log_Space:</span> <span class="number">4548</span></span><br><span class="line"><span class="attr">              Until_Condition:</span> <span class="string">None</span></span><br><span class="line"><span class="attr">               Until_Log_File:</span></span><br><span class="line"><span class="attr">                Until_Log_Pos:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">           Master_SSL_Allowed:</span> <span class="literal">No</span></span><br><span class="line"><span class="attr">           Master_SSL_CA_File:</span></span><br><span class="line"><span class="attr">           Master_SSL_CA_Path:</span></span><br><span class="line"><span class="attr">              Master_SSL_Cert:</span></span><br><span class="line"><span class="attr">            Master_SSL_Cipher:</span></span><br><span class="line"><span class="attr">               Master_SSL_Key:</span></span><br><span class="line"><span class="attr">        Seconds_Behind_Master:</span> <span class="literal">NULL</span></span><br><span class="line"><span class="attr">Master_SSL_Verify_Server_Cert:</span> <span class="literal">No</span></span><br><span class="line"><span class="attr">                Last_IO_Errno:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">                Last_IO_Error:</span></span><br><span class="line"><span class="attr">               Last_SQL_Errno:</span> <span class="number">1062</span></span><br><span class="line"><span class="attr">               Last_SQL_Error:</span> <span class="string">Worker</span> <span class="number">1</span> <span class="string">failed</span> <span class="string">executing</span> <span class="string">transaction</span> <span class="string">'69231693-651b-11e6-a629-000c29b2535c:16'</span> <span class="string">at</span> <span class="string">master</span> <span class="string">log</span> <span class="string">mysql.000002,</span> <span class="string">end_log_pos</span> <span class="number">4110</span><span class="string">;</span> <span class="string">Could</span> <span class="string">notexecute</span> <span class="string">Write_rows</span> <span class="string">event</span> <span class="string">on</span> <span class="string">table</span> <span class="string">tmp.test;</span> <span class="string">Duplicate</span> <span class="string">entry</span> <span class="string">'2'</span> <span class="string">for</span> <span class="string">key</span> <span class="string">'PRIMARY'</span><span class="string">,</span> <span class="attr">Error_code:</span> <span class="number">1062</span><span class="string">;</span> <span class="string">handler</span> <span class="string">error</span> <span class="string">HA_ERR_FOUND_DUPP_KEY;</span> <span class="string">the</span> <span class="string">event's</span> <span class="string">master</span> <span class="string">log</span> <span class="string">mysql.000002,</span> <span class="string">end_log_pos</span> <span class="number">4110</span></span><br><span class="line"><span class="attr">  Replicate_Ignore_Server_Ids:</span></span><br><span class="line"><span class="attr">             Master_Server_Id:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">                  Master_UUID:</span> <span class="number">69231693</span><span class="bullet">-651</span><span class="string">b-11e6-a629-000c29b2535c</span></span><br><span class="line"><span class="attr">             Master_Info_File:</span> <span class="string">mysql.slave_master_info</span></span><br><span class="line"><span class="attr">                    SQL_Delay:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">          SQL_Remaining_Delay:</span> <span class="literal">NULL</span></span><br><span class="line"><span class="attr">      Slave_SQL_Running_State:</span></span><br><span class="line"><span class="attr">           Master_Retry_Count:</span> <span class="number">86400</span></span><br><span class="line"><span class="attr">                  Master_Bind:</span></span><br><span class="line"><span class="attr">      Last_IO_Error_Timestamp:</span></span><br><span class="line"><span class="attr">     Last_SQL_Error_Timestamp:</span> <span class="number">160819</span> <span class="number">08</span><span class="string">:59:56</span></span><br><span class="line"><span class="attr">               Master_SSL_Crl:</span></span><br><span class="line"><span class="attr">           Master_SSL_Crlpath:</span></span><br><span class="line"><span class="attr">           Retrieved_Gtid_Set:</span> <span class="number">69231693</span><span class="bullet">-651</span><span class="attr">b-11e6-a629-000c29b2535c:1-16</span></span><br><span class="line"><span class="attr">            Executed_Gtid_Set:</span> <span class="number">29</span><span class="attr">d0bc3d-65a7-11e6-a9b8-000c29c171cb:1,</span></span><br><span class="line"><span class="number">69231693</span><span class="bullet">-651</span><span class="attr">b-11e6-a629-000c29b2535c:1-15</span></span><br><span class="line"><span class="attr">                Auto_Position:</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="string">row</span> <span class="string">in</span> <span class="string">set</span> <span class="string">(0.00</span> <span class="string">sec)</span></span><br></pre></td></tr></table></figure><div class="note danger"><p>从上面的信息就可以看到从库报错了</p></div><h3 id="开始解决"><a href="#开始解决" class="headerlink" title="开始解决"></a>开始解决</h3><p>从上面可以看到从库同步出现了故障，因为数据库的表中有一个id列，在生产环境中id列一般为主键，不能重复，而且可能还是自增长的，现在主库与从库两个id冲忽，所以才报错的。</p><h4 id="直接跳过错误的GTID事务"><a href="#直接跳过错误的GTID事务" class="headerlink" title="直接跳过错误的GTID事务"></a>直接跳过错误的GTID事务</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">mysql&gt;</span> <span class="string">stop</span> <span class="string">slave;</span></span><br><span class="line"><span class="string">Query</span> <span class="string">OK,</span> <span class="number">0</span> <span class="string">rows</span> <span class="string">affected</span> <span class="string">(0.02</span> <span class="string">sec)</span></span><br><span class="line"></span><br><span class="line"><span class="string">mysql&gt;</span> <span class="string">reset</span> <span class="string">slave;</span></span><br><span class="line"><span class="string">Query</span> <span class="string">OK,</span> <span class="number">0</span> <span class="string">rows</span> <span class="string">affected</span> <span class="string">(0.01</span> <span class="string">sec)</span></span><br><span class="line"></span><br><span class="line"><span class="string">mysql&gt;</span> <span class="string">set</span> <span class="string">global</span> <span class="string">gtid_purged="69231693-651b-11e6-a629-000c29b2535c:1-16";</span></span><br><span class="line"><span class="string">Query</span> <span class="string">OK,</span> <span class="number">0</span> <span class="string">rows</span> <span class="string">affected</span> <span class="string">(0.02</span> <span class="string">sec)</span></span><br><span class="line"></span><br><span class="line"><span class="string">mysql&gt;</span> <span class="string">change</span> <span class="string">master</span> <span class="string">to</span></span><br><span class="line"><span class="bullet">    -</span><span class="string">&gt; master_host='192.168.80.10',</span></span><br><span class="line"><span class="string">    -&gt; master_user='repluser',</span></span><br><span class="line"><span class="string">    -&gt; master_password='123456',</span></span><br><span class="line"><span class="string">    -&gt; master_auto_position=1;</span></span><br><span class="line"><span class="string">Query OK, 0 rows affected, 2 warnings (0.04 sec)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">mysql&gt; start slave;</span></span><br><span class="line"><span class="string">Query OK, 0 rows affected, 1 warning (0.03 sec)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">mysql&gt; show slave status \G</span></span><br><span class="line"><span class="string">*************************** 1. row ***************************</span></span><br><span class="line"><span class="string"></span><span class="attr">               Slave_IO_State:</span> <span class="string">Waiting</span> <span class="string">for</span> <span class="string">master</span> <span class="string">to</span> <span class="string">send</span> <span class="string">event</span></span><br><span class="line"><span class="attr">                  Master_Host:</span> <span class="number">192.168</span><span class="number">.80</span><span class="number">.10</span></span><br><span class="line"><span class="attr">                  Master_User:</span> <span class="string">repluser</span></span><br><span class="line"><span class="attr">                  Master_Port:</span> <span class="number">3306</span></span><br><span class="line"><span class="attr">                Connect_Retry:</span> <span class="number">60</span></span><br><span class="line"><span class="attr">              Master_Log_File:</span> <span class="string">mysql.000002</span></span><br><span class="line"><span class="attr">          Read_Master_Log_Pos:</span> <span class="number">4141</span></span><br><span class="line"><span class="attr">               Relay_Log_File:</span> <span class="string">mysqld-relay-bin.000002</span></span><br><span class="line"><span class="attr">                Relay_Log_Pos:</span> <span class="number">396</span></span><br><span class="line"><span class="attr">        Relay_Master_Log_File:</span> <span class="string">mysql.000002</span></span><br><span class="line"><span class="attr">             Slave_IO_Running:</span> <span class="literal">Yes</span></span><br><span class="line"><span class="attr">            Slave_SQL_Running:</span> <span class="literal">Yes</span></span><br><span class="line"><span class="attr">              Replicate_Do_DB:</span></span><br><span class="line"><span class="attr">          Replicate_Ignore_DB:</span> <span class="string">mysql</span></span><br><span class="line"><span class="attr">           Replicate_Do_Table:</span></span><br><span class="line"><span class="attr">       Replicate_Ignore_Table:</span></span><br><span class="line"><span class="attr">      Replicate_Wild_Do_Table:</span></span><br><span class="line"><span class="attr">  Replicate_Wild_Ignore_Table:</span></span><br><span class="line"><span class="attr">                   Last_Errno:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">                   Last_Error:</span></span><br><span class="line"><span class="attr">                 Skip_Counter:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">          Exec_Master_Log_Pos:</span> <span class="number">4141</span></span><br><span class="line"><span class="attr">              Relay_Log_Space:</span> <span class="number">601</span></span><br><span class="line"><span class="attr">              Until_Condition:</span> <span class="string">None</span></span><br><span class="line"><span class="attr">               Until_Log_File:</span></span><br><span class="line"><span class="attr">                Until_Log_Pos:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">           Master_SSL_Allowed:</span> <span class="literal">No</span></span><br><span class="line"><span class="attr">           Master_SSL_CA_File:</span></span><br><span class="line"><span class="attr">           Master_SSL_CA_Path:</span></span><br><span class="line"><span class="attr">              Master_SSL_Cert:</span></span><br><span class="line"><span class="attr">            Master_SSL_Cipher:</span></span><br><span class="line"><span class="attr">               Master_SSL_Key:</span></span><br><span class="line"><span class="attr">        Seconds_Behind_Master:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">Master_SSL_Verify_Server_Cert:</span> <span class="literal">No</span></span><br><span class="line"><span class="attr">                Last_IO_Errno:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">                Last_IO_Error:</span></span><br><span class="line"><span class="attr">               Last_SQL_Errno:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">               Last_SQL_Error:</span></span><br><span class="line"><span class="attr">  Replicate_Ignore_Server_Ids:</span></span><br><span class="line"><span class="attr">             Master_Server_Id:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">                  Master_UUID:</span> <span class="number">69231693</span><span class="bullet">-651</span><span class="string">b-11e6-a629-000c29b2535c</span></span><br><span class="line"><span class="attr">             Master_Info_File:</span> <span class="string">mysql.slave_master_info</span></span><br><span class="line"><span class="attr">                    SQL_Delay:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">          SQL_Remaining_Delay:</span> <span class="literal">NULL</span></span><br><span class="line"><span class="attr">      Slave_SQL_Running_State:</span> <span class="string">Slave</span> <span class="string">has</span> <span class="string">read</span> <span class="string">all</span> <span class="string">relay</span> <span class="string">log;</span> <span class="string">waiting</span> <span class="string">for</span> <span class="string">the</span> <span class="string">slave</span> <span class="string">I/O</span> <span class="string">thread</span> <span class="string">to</span> <span class="string">update</span> <span class="string">it</span></span><br><span class="line"><span class="attr">           Master_Retry_Count:</span> <span class="number">86400</span></span><br><span class="line"><span class="attr">                  Master_Bind:</span></span><br><span class="line"><span class="attr">      Last_IO_Error_Timestamp:</span></span><br><span class="line"><span class="attr">     Last_SQL_Error_Timestamp:</span></span><br><span class="line"><span class="attr">               Master_SSL_Crl:</span></span><br><span class="line"><span class="attr">           Master_SSL_Crlpath:</span></span><br><span class="line"><span class="attr">           Retrieved_Gtid_Set:</span></span><br><span class="line"><span class="attr">            Executed_Gtid_Set:</span> <span class="number">69231693</span><span class="bullet">-651</span><span class="attr">b-11e6-a629-000c29b2535c:1-16</span></span><br><span class="line"><span class="attr">                Auto_Position:</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="string">row</span> <span class="string">in</span> <span class="string">set</span> <span class="string">(0.00</span> <span class="string">sec)</span></span><br></pre></td></tr></table></figure><h4 id="测试主从同步"><a href="#测试主从同步" class="headerlink" title="测试主从同步"></a>测试主从同步</h4><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"># 主库</span><br><span class="line">mysql&gt; insert into test values(3,<span class="emphasis">'jom'</span>);</span><br><span class="line">Query OK, 1 row affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from test;</span><br><span class="line"><span class="code">+----+</span>------+</span><br><span class="line">| id | name |</span><br><span class="line"><span class="code">+----+</span>------+</span><br><span class="line">|  1 | lily |</span><br><span class="line">|  2 | jom  |</span><br><span class="line">|  3 | jom  |</span><br><span class="line"><span class="code">+----+</span>------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"># 从库</span><br><span class="line">mysql&gt; select * from test;</span><br><span class="line"><span class="code">+----+</span>------+</span><br><span class="line">| id | name |</span><br><span class="line"><span class="code">+----+</span>------+</span><br><span class="line">|  1 | lily |</span><br><span class="line">|  2 | tom  |</span><br><span class="line">|  3 | jom  |</span><br><span class="line"><span class="code">+----+</span>------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><div class="note warning"><p>同步恢复正常，此方法有一个问题就是会导致主从的数据不一致, 最好就是先恢复数据库正常运行，然后在找时间重建从库</p></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;GTID是MYSQL 5.6的新特性，其全称是Global Transaction Identifier，可简化MYSQL的主从切换以及Failover。GTID用于在binlog中唯一标识一个事务。当事务提交时，MYSQL Server在写binlog的时候，会先写一个特殊的Binlog Event，类型为GTID_Event，指定下一个事务的GTID，然后再写事务的Binlog。主从同步时GTID_Event和事务的Binlog都会传递到从库，从库在执行的时候也是用同样的GTID写binlog，这样主从同步以后，就可通过GTID确定从库同步到的位置了。也就是说，无论是级联情况，还是一主多从情况，都可以通过GTID自动找点儿，而无需像之前那样通过 File_name 和File_position 找点儿了&lt;/p&gt;
    
    </summary>
    
      <category term="mysql" scheme="https://wglee.org/categories/mysql/"/>
    
    
      <category term="mysql" scheme="https://wglee.org/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>NGINX 支持 Keepalive 长连接</title>
    <link href="https://wglee.org/2018/12/02/nginx-keepalive/"/>
    <id>https://wglee.org/2018/12/02/nginx-keepalive/</id>
    <published>2018-12-02T09:14:55.000Z</published>
    <updated>2019-02-27T01:53:21.755Z</updated>
    
    <content type="html"><![CDATA[<p>当使用 NGINX 作为反向代理时，为了支持长连接，需要做到两点：</p><pre><code>1. 从 Client 到 NGINX 的连接是长连接2. 从 NGINX 到 Server 的连接是长连接</code></pre><p>从 HTTP 协议的角度看，NGINX 在这个过程中，对于客户端它扮演着HTTP服务器端的角色。而对于真正的服务器端（在 NGINX 的术语中称为 <code>upstream</code>）NGINX 又扮演着HTTP客户端的角色。</p><a id="more"></a><h1 id="保持和-Client-的长连接"><a href="#保持和-Client-的长连接" class="headerlink" title="保持和 Client 的长连接"></a>保持和 Client 的长连接</h1><p>为了在 Client 和 NGINX 之间保持上连接，有两个要求</p><ol><li>Client 发送的 HTTP 请求要求 <code>keepalive</code></li><li>NGINX 设置上支持 <code>keepalive</code></li></ol><h2 id="HTTP-配置"><a href="#HTTP-配置" class="headerlink" title="HTTP 配置"></a>HTTP 配置</h2><p>默认情况下，NGINX 已经自动开启了对 Client 连接的 keepalive 支持。一般场景可以直接使用，但是对于一些比较特殊的场景，还是有必要调整个别参数。</p><p>需要修改NGINX的配置文件(在NGINX安装目录下的<code>conf/nginx.conf</code>):</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http &#123;</span><br><span class="line">    keepalive_timeout  <span class="number">120</span>s <span class="number">120</span>s;</span><br><span class="line">    keepalive_requests <span class="number">10000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="keepalive-timeout-指令"><a href="#keepalive-timeout-指令" class="headerlink" title="keepalive_timeout 指令"></a>keepalive_timeout 指令</h3><p><em>keepalive_timeout指令的语法</em></p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">Syntax:</span> keepalive_timeout timeout [header_timeout]<span class="comment">;</span></span><br><span class="line"><span class="symbol">Default:</span>    keepalive_timeout <span class="number">75</span>s<span class="comment">;</span></span><br><span class="line"><span class="symbol">Context:</span>    http, server, location</span><br></pre></td></tr></table></figure><p>第一个参数设置 <code>keepalive</code> 客户端连接在服务器端保持开启的超时值。值为 0 会禁用 <code>keepalive</code>客户端连接。可选的第二个参数在响应的 header 域中设置一个值 <code>&quot;Keep-Alive: timeout=time&quot;</code>。这两个参数可以不一样。</p><div class="note info"><p>注：默认75s一般情况下也够用，对于一些请求比较大的内部服务器通讯的场景，适当加大为120s或者300s。第二个参数通常可以不用设置。</p></div><h3 id="keepalive-requests-指令"><a href="#keepalive-requests-指令" class="headerlink" title="keepalive_requests 指令"></a>keepalive_requests 指令</h3><p><code>keepalive_requests</code> 指令用于设置一个<code>keepalive</code>连接上可以服务的请求的最大数量。当最大请求数量达到时，连接被关闭。默认是<code>100</code>。</p><div class="note info"><p>这个参数的真实含义，是指一个<code>keepalive</code>建立之后，NGINX 就会为这个连接设置一个计数器，记录这个<code>keepalive</code>的长连接上已经接收并处理的客户端请求的数量。如果达到这个参数设置的最大值时，则nginx会强行关闭这个长连接，逼迫客户端不得不重新建立新的长连接。</p><p>这个参数往往被大多数人忽略，因为大多数情况下当QPS(每秒请求数)不是很高时，默认值100凑合够用。但是，对于一些QPS比较高（比如超过10000QPS，甚至达到30000,50000甚至更高) 的场景，默认的100就显得太低。</p><p>简单计算一下，QPS=10000时，客户端每秒发送10000个请求(通常建立有多个长连接)，每个连接只能最多跑100次请求，意味着平均每秒钟就会有100个长连接因此被nginx关闭。同样意味着为了保持QPS，客户端不得不每秒中重新新建100个连接。因此，如果用<code>netstat</code>命令看客户端机器，就会发现有大量的<code>TIME_WAIT</code>的<code>socket</code>连接(即使此时<code>keep alive</code>已经在Client和NGINX之间生效)。</p><p>因此对于QPS较高的场景，非常有必要加大这个参数，以避免出现大量连接被生成再抛弃的情况，减少<code>TIME_WAIT</code>。</p></div><h1 id="保持和-Server-的长连接"><a href="#保持和-Server-的长连接" class="headerlink" title="保持和 Server 的长连接"></a>保持和 Server 的长连接</h1><p>为了让NGINX和Server（nginx称为upstream）之间保持长连接，典型设置如下：</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">http &#123;</span><br><span class="line">    upstream backend &#123;</span><br><span class="line">        <span class="keyword">server</span>   <span class="number">192.168</span><span class="number">.0</span><span class="number">.1</span>：<span class="number">8080</span>  weight=<span class="number">1</span> max_fails=<span class="number">2</span> fail_timeout=<span class="number">30</span>s;</span><br><span class="line">        <span class="keyword">server</span>   <span class="number">192.168</span><span class="number">.0</span><span class="number">.2</span>：<span class="number">8080</span>  weight=<span class="number">1</span> max_fails=<span class="number">2</span> fail_timeout=<span class="number">30</span>s;</span><br><span class="line">        keepalive <span class="number">300</span>;      <span class="comment">// 这个很重要！</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">server</span> &#123;</span><br><span class="line">        listen <span class="number">8080</span> default_server;</span><br><span class="line">        server_name <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            proxy_pass http:<span class="comment">//backend;</span></span><br><span class="line">            proxy_http_version <span class="number">1.1</span>;       <span class="comment">// 这两个也要设置</span></span><br><span class="line">            proxy_set_header Connection <span class="string">""</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="upstream-设置"><a href="#upstream-设置" class="headerlink" title="upstream 设置"></a>upstream 设置</h2><p><code>upstream</code> 设置中，有个参数要特别的小心，就是这个 <code>keepalive</code>。</p><p>大多数未仔细研读过 NGINX 的同学通常都会<strong>误解</strong>这个参数，有些人理解为这里的 <code>keepalive</code> 是设置是否打开长连接，以为应该设置为 <code>ON/OFF</code>。有些人会被前面的 <code>keepalive_timeout</code> 误导，以为这里也是设置 keepalive 的 timeout。</p><p>但是实际上这个<code>keepalive</code>参数的含义非常的奇特，请小心看 <span class="exturl" data-url="aHR0cDovL25naW54Lm9yZy9lbi9kb2NzL2h0dHAvbmd4X2h0dHBfdXBzdHJlYW1fbW9kdWxlLmh0bWwja2VlcGFsaXZl" title="http://nginx.org/en/docs/http/ngx_http_upstream_module.html#keepalive">NGINX文档<i class="fa fa-external-link"></i></span> 中的说明:</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">Syntax:</span>    keepalive connections<span class="comment">;</span></span><br><span class="line"><span class="symbol">Default:</span>   —</span><br><span class="line"><span class="symbol">Context:</span>   upstream</span><br></pre></td></tr></table></figure><div class="note info"><pre><code>Activates the cache for connections to upstream servers.</code></pre><blockquote><p>激活到upstream服务器的连接缓存。</p></blockquote><pre><code>The connections parameter sets the maximum number of idle keepalive connections to upstream servers that are preserved in the cache of each worker process. When this number is exceeded, the least recently used connections are closed.</code></pre><blockquote><p>connections参数设置每个worker进程在缓冲中保持的到upstream服务器的空闲keepalive连接的最大数量.当这个数量被突破时，最近使用最少的连接将被关闭。</p></blockquote><pre><code>It should be particularly noted that the keepalive directive does not limit the total number of connections to upstream servers that an nginx worker process can open. The connections parameter should be set to a number small enough to let upstream servers process new incoming connections as well.</code></pre><blockquote><p>keepalive指令不会限制一个nginx worker进程到upstream服务器连接的总数量。connections参数应该设置为一个足够小的数字来让upstream服务器来处理新进来的连接。</p></blockquote></div><p><em>在这里可以看到，前面的几种猜测可以确认是错误的了</em></p><pre><code>1. keepalive 不是 ON/OFF 之类的开关2. keepalive 不是 TIMEOUT，不是用来设置超时值</code></pre><p>很多人读到这里的文档之后，会产生另外一个误解：认为这个参数是设置到<code>upstream</code>服务器的长连接的数量，分歧在于是最大连接数还是最小连接数，不得不说这也是一个挺逗的分歧……</p><p>回到<span class="exturl" data-url="aHR0cDovL25naW54Lm9yZy9lbi9kb2NzL2h0dHAvbmd4X2h0dHBfdXBzdHJlYW1fbW9kdWxlLmh0bWwja2VlcGFsaXZl" title="http://nginx.org/en/docs/http/ngx_http_upstream_module.html#keepalive">NGINX文档<i class="fa fa-external-link"></i></span>，请特别注意这句话，至关重要：</p><div class="note info"><pre><code>The connections parameter sets the maximum number of idle keepalive connections to upstream servers</code></pre><blockquote><p>connections参数设置到upstream服务器的空闲keepalive连接的最大数量</p></blockquote></div><p>请仔细体会这个 <code>idle</code> 的概念，何为<code>idle</code>。大多数人之所以误解为是到<code>upstream</code>服务器的最大长连接数，一般都是因为看到了文档中的这句话，而漏看了这个<code>idle</code>一词。</p><p>然后继续看文档后面另外一句话：</p><div class="note info"><pre><code>When this number is exceeded, the least recently used connections are closed.</code></pre><blockquote><p>当这个数量被突破时，最近使用最少的连接将被关闭。</p></blockquote></div><p>这句话更是大大强化了前面关于<code>keepalive</code>设置的是最大长连接数的误解：如果连接数超过<code>keepalive</code>的限制，就关闭连接。这不是<strong>赤裸裸</strong>的最大连接数么？</p><p>但是NGINX的文档立马给出了指示，否定了最大连接数的可能：</p><div class="note info"><pre><code>It should be particularly noted that the keepalive directive does not limit the total number of connections to upstream servers that an nginx worker process can open.</code></pre><blockquote><p>特别提醒：keepalive 指令不会限制一个 nginx worker 进程到 upstream 服务器连接的总数量。</p></blockquote></div><h3 id="keepalive-参数的理解"><a href="#keepalive-参数的理解" class="headerlink" title="keepalive 参数的理解"></a>keepalive 参数的理解</h3><p>要真正理解keepalive参数的含义，请回到文档中的这句：</p><div class="note info"><pre><code>The connections parameter sets the maximum number of idle keepalive connections to upstream servers</code></pre><blockquote><p>connections 参数设置到 upstream 服务器的空闲 keepalive 连接的最大数量</p></blockquote></div><p>请注意<strong>空闲</strong> keepalive 连接的最大数量中空闲这个关键字。</p><p>为了能让大家理解这个概念，我们先假设一个场景： 有一个HTTP服务，作为<code>upstream</code>服务器接收请求，响应时间为100毫秒。如果要达到10000 QPS的性能，就需要在nginx和<code>upstream</code>服务器之间建立大约1000条HTTP连接。nginx为此建立连接池，然后请求过来时为每个请求分配一个连接，请求结束时回收连接放入连接池中，连接的状态也就更改为idle。</p><p>我们再假设这个<code>upstream</code>服务器的<code>keepalive</code>参数设置比较小，比如常见的10.</p><p>假设请求和响应是均匀而平稳的，那么这1000条连接应该都是一放回连接池就立即被后续请求申请使用，线程池中的idle线程会非常的少，趋进于零。我们以10毫秒为一个单位，来看连接的情况(注意场景是1000个线程+100毫秒响应时间，每秒有10000个请求完成)：</p><ul><li>每10毫秒有100个新请求，需要100个连接</li><li>每10毫秒有100个请求结束，可以释放100个连接</li><li>如果请求和应答都均匀，则10毫秒内释放的连接刚好够用，不需要新建连接，连接池空闲连接为零</li></ul><p>然后再回到现实世界，请求通常不是足够的均匀和平稳，为了简化问题，我们假设应答始终都是平稳的，只是请求不平稳，第一个10毫秒只有50,第二个10毫秒有150：</p><ol><li>下一个10毫秒，有100个连接结束请求回收连接到连接池，但是假设此时请求不均匀10毫秒内没有预计的100个请求进来，而是只有50个请求。注意此时连接池回收了100个连接又分配出去50个连接，因此连接池内有50个空闲连接。</li><li>然后注意看<code>keepalive=10</code>的设置，这意味着连接池中最多容许保留有10个空闲连接。因此nginx不得不将这50个空闲连接中的40个关闭，只留下10个。</li><li>再下一个10个毫秒，有150个请求进来，有100个请求结束任务释放连接。<code>150 - 100 = 50</code>,空缺了50个连接，减掉前面连接池保留的10个空闲连接，nginx不得不新建40个新连接来满足要求。</li></ol><p>我们可以看到，在短短的20毫秒内，仅仅因为请求不够均匀，就导致nginx在前10毫秒判断空闲连接过多关闭了40个连接，而后10毫秒又不得不新建40个连接来弥补连接的不足。</p><p>再来一次类似的场景，假设请求是均匀的，而应答不再均匀，前10毫秒只有50个请求结束，后10毫秒有150个：</p><ol><li>前10毫秒，进来100个请求，结束50个请求，导致连接不够用，nginx为此新建50个连接</li><li>后10毫秒，进来100个请求，结束150个请求，导致空闲连接过多，ngixn为此关闭了<code>150-100-10=40</code>个空闲连接</li></ol><div class="note info"><p>特别提醒的是：第二个应答不均匀的场景实际上是对应第一个请求不均匀的场景：正是因为请求不均匀，所以导致100毫秒之后这些请求的应答必然不均匀。</p></div><p>现实世界中的请求往往和理想状态有巨大差异，请求不均匀，服务器处理请求的时间也不平稳，这理论上的大概1000个连接在反复的回收和再分配的过程中，必然出现两种非常矛盾场景在短时间内反复： 1. 连接不够用，造成新建连接 2. 连接空闲，造成关闭连接。从而使得总连接数出现反复震荡，不断的创建新连接和关闭连接，使得长连接的效果被大大削弱。</p><p>造成连接数量反复震荡的一个推手，就是这个<code>keepalive</code> 这个最大空闲连接数。毕竟连接池中的1000个连接在频繁利用时，出现短时间内多余10个空闲连接的概率实在太高。因此为了避免出现上面的连接震荡，必须考虑加大这个参数，比如上面的场景如果将<code>keepalive</code>设置为<code>100</code>或者<code>200</code>,就可以非常有效的缓冲请求和应答不均匀。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p><code>keepalive</code> 这个参数一定要小心设置，尤其对于QPS比较高的场景，推荐先做一下估算，根据QPS和平均响应时间大体能计算出需要的长连接的数量。比如前面10000 QPS和100毫秒响应时间就可以推算出需要的长连接数量大概是1000. 然后将<code>keepalive</code>设置为这个长连接数量的10%到30%。</p><p>比较懒的同学，可以直接设置为 <code>keepalive=1000</code> 之类的，一般都OK的了。</p><h2 id="location-设置"><a href="#location-设置" class="headerlink" title="location 设置"></a>location 设置</h2><p><code>location</code>中有两个参数需要设置：</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">http &#123;</span><br><span class="line">    server &#123;</span><br><span class="line">        <span class="keyword">location</span> <span class="title">/  &#123;</span></span><br><span class="line"><span class="title">            proxy_http_version</span> <span class="number">1.1</span>;     // 这两个最好也设置</span><br><span class="line">            proxy_set_header Connection <span class="string">""</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>HTTP协议中对长连接的支持是从1.1版本之后才有的，因此最好通过 <code>proxy_http_version</code> 指令设置为 <code>1.1</code>，而 “Connection” header 应该被清理。清理的意思，我的理解，是清理从Client过来的http header，因为即使是Client和NGINX之间是短连接，NGINX 和 upstream 之间也是可以开启长连接的。这种情况下必须清理来自 Client 请求中的 “Connection” header。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;当使用 NGINX 作为反向代理时，为了支持长连接，需要做到两点：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1. 从 Client 到 NGINX 的连接是长连接
2. 从 NGINX 到 Server 的连接是长连接
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;从 HTTP 协议的角度看，NGINX 在这个过程中，对于客户端它扮演着HTTP服务器端的角色。而对于真正的服务器端（在 NGINX 的术语中称为 &lt;code&gt;upstream&lt;/code&gt;）NGINX 又扮演着HTTP客户端的角色。&lt;/p&gt;
    
    </summary>
    
      <category term="nginx" scheme="https://wglee.org/categories/nginx/"/>
    
    
  </entry>
  
  <entry>
    <title>MaxScale 实现 MYSQL 读写分离，负载均衡</title>
    <link href="https://wglee.org/2018/04/05/mysql-maxsacle/"/>
    <id>https://wglee.org/2018/04/05/mysql-maxsacle/</id>
    <published>2018-04-05T13:43:14.000Z</published>
    <updated>2019-02-27T01:53:21.755Z</updated>
    
    <content type="html"><![CDATA[<p><code>maxscale</code> 是 mariadb 公司开发的一套数据库中间件，可以很方便的实现读写分离方案；并且提供了读写分离的负载均衡和高可用性保障。另外 <code>maxscale</code> 对于前端应用而言是透明的，我们可以很方便的将应用迁移到 <code>maxscale</code> 中实现读写分离方案，来分担主库的压力。<br><code>maxscale</code> 也提供了sql语句的解析过滤功能。这里我们主要讲解 <code>maxscale</code> 的安装、配置。</p><a id="more"></a><ul><li>参考文档：<span class="exturl" data-url="aHR0cDovL2RiYXBsdXMuY24vbmV3cy0xMS02MjctMS5odG1s" title="http://dbaplus.cn/news-11-627-1.html">DBAplus 社区<i class="fa fa-external-link"></i></span></li></ul><h2 id="搭建主从集群"><a href="#搭建主从集群" class="headerlink" title="搭建主从集群"></a>搭建主从集群</h2><blockquote><p>一主两从</p></blockquote><h2 id="安装-MaxScale"><a href="#安装-MaxScale" class="headerlink" title="安装 MaxScale"></a>安装 MaxScale</h2><ul><li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21hcmlhZGItY29ycG9yYXRpb24vTWF4U2NhbGU=" title="https://github.com/mariadb-corporation/MaxScale">github 地址<i class="fa fa-external-link"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9kb3dubG9hZHMubWFyaWFkYi5jb20vTWF4U2NhbGU=" title="https://downloads.mariadb.com/MaxScale">下载地址<i class="fa fa-external-link"></i></span></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install https://downloads.mariadb.com/MaxScale/1.4.5/centos/6Server/x86_64/maxscale-1.4.5-1.centos.6.x86_64.rpm</span><br></pre></td></tr></table></figure><h2 id="配置-MaxScale"><a href="#配置-MaxScale" class="headerlink" title="配置 MaxScale"></a>配置 MaxScale</h2><p><em>在主库创建监控用户，路由用户</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">create user scalemon@<span class="string">'%'</span> identified by <span class="string">"111111"</span>;</span><br><span class="line">grant replication slave, replication client on *.* to scalemon@<span class="string">'%'</span>;</span><br><span class="line"></span><br><span class="line">create user maxscale@<span class="string">'%'</span> identified by <span class="string">"111111"</span>;</span><br><span class="line">grant select on mysql.* to maxscale@<span class="string">'%'</span>;</span><br></pre></td></tr></table></figure><blockquote><p>从库会自动同步</p></blockquote><p><em>开始配置</em></p><pre><code>1. 找到 [server1] 部分，修改其中的 address 和 port，指向 master 的 IP 和端口。2. 复制2次 [server1] 的整块儿内容，改为 [server2] 与 [server3]，同样修改其中的 address 和 port，分别指向 slave1 和 slave23. 找到 [MySQL Monitor] 部分，修改 servers 为 server1,server2,server3，修改 user 和 passwd 为之前创建的监控用户的信息（scalemon,111111）4. 找到 [Read-Write Service] 部分，修改 servers 为 server1,server2,server3，修改 user 和 passwd 为之前创建的路由用户的信息（maxscale,111111）5. 由于我们使用了 [Read-Write Service]，需要删除或注释另一个服务 [Read-Only Service]，删除其整块儿内容即可。 [Read-Only Listener] 也需要同时删除或注释</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">[root@MHA_Maxscale ~]<span class="comment"># cat /etc/maxscale.cnf</span></span><br><span class="line">[maxscale]</span><br><span class="line">threads=1</span><br><span class="line">log_info=1      <span class="comment"># 日志级别</span></span><br><span class="line">logdir=/tmp/    <span class="comment"># 指定日志存放路径</span></span><br><span class="line"></span><br><span class="line">[server1]</span><br><span class="line"><span class="built_in">type</span>=server</span><br><span class="line">address=192.168.79.12</span><br><span class="line">port=3306</span><br><span class="line">protocol=MySQLBackend</span><br><span class="line"></span><br><span class="line">[server2]</span><br><span class="line"><span class="built_in">type</span>=server</span><br><span class="line">address=192.168.79.13</span><br><span class="line">port=3306</span><br><span class="line">protocol=MySQLBackend</span><br><span class="line"></span><br><span class="line">[server3]</span><br><span class="line"><span class="built_in">type</span>=server</span><br><span class="line">address=192.168.79.14</span><br><span class="line">port=3306</span><br><span class="line">protocol=MySQLBackend</span><br><span class="line"></span><br><span class="line">[MySQL Monitor]</span><br><span class="line"><span class="built_in">type</span>=monitor</span><br><span class="line">module=mysqlmon</span><br><span class="line">servers=server1,server2,server3</span><br><span class="line">user=scalemon</span><br><span class="line">passwd=111111</span><br><span class="line">monitor_interval=10000</span><br><span class="line"><span class="comment"># 所有 slave 失效后，master 也可正常访问</span></span><br><span class="line"><span class="comment"># 如果为 false slave 全部失效后 master 也将不可用</span></span><br><span class="line">detect_stale_master=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">[Read-Write Service]</span><br><span class="line"><span class="built_in">type</span>=service</span><br><span class="line">router=readwritesplit</span><br><span class="line">servers=server1,server2,server3</span><br><span class="line">user=maxscale</span><br><span class="line">passwd=111111</span><br><span class="line">max_slave_connections=100%</span><br><span class="line"></span><br><span class="line">[MaxAdmin Service]</span><br><span class="line"><span class="built_in">type</span>=service</span><br><span class="line">router=cli</span><br><span class="line"></span><br><span class="line">[Read-Write Listener]</span><br><span class="line"><span class="built_in">type</span>=listener</span><br><span class="line">service=Read-Write Service</span><br><span class="line">protocol=MySQLClient</span><br><span class="line">port=4006</span><br><span class="line"></span><br><span class="line">[MaxAdmin Listener]</span><br><span class="line"><span class="built_in">type</span>=listener</span><br><span class="line">service=MaxAdmin Service</span><br><span class="line">protocol=maxscaled</span><br><span class="line">port=6603</span><br></pre></td></tr></table></figure><p><em>启动检查状态</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@MHA_Maxscale ~]<span class="comment"># /etc/init.d/maxscale</span></span><br><span class="line">[root@MHA_Maxscale ~]<span class="comment"># netstat -anptl | grep maxscale</span></span><br><span class="line">tcp        0      0 0.0.0.0:4006                0.0.0.0:*                   LISTEN      1882/maxscale</span><br><span class="line">tcp        0      0 0.0.0.0:6603                0.0.0.0:*                   LISTEN      1882/maxscale</span><br></pre></td></tr></table></figure><pre><code>- 4006: 是连接 MaxScale 时使用的端口- 6603: 是 MaxScale 管理器的端口</code></pre><p>登录 <code>MaxScale</code> 管理器，查看一下数据库连接状态，默认的用户名和密码是 <code>admin/mariadb</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@MHA_Maxscale ~]<span class="comment"># maxadmin --user=admin --password=mariadb</span></span><br><span class="line">MaxScale&gt; list servers</span><br><span class="line">Servers.</span><br><span class="line">-------------------+-----------------+-------+-------------+--------------------</span><br><span class="line">Server             | Address         | Port  | Connections | Status</span><br><span class="line">-------------------+-----------------+-------+-------------+--------------------</span><br><span class="line">server1            | 192.168.79.12   |  3306 |           0 | Master, Running</span><br><span class="line">server2            | 192.168.79.13   |  3306 |           0 | Slave, Running</span><br><span class="line">server3            | 192.168.79.14   |  3306 |           0 | Slave, Running</span><br><span class="line">-------------------+-----------------+-------+-------------+--------------------</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;maxscale&lt;/code&gt; 是 mariadb 公司开发的一套数据库中间件，可以很方便的实现读写分离方案；并且提供了读写分离的负载均衡和高可用性保障。另外 &lt;code&gt;maxscale&lt;/code&gt; 对于前端应用而言是透明的，我们可以很方便的将应用迁移到 &lt;code&gt;maxscale&lt;/code&gt; 中实现读写分离方案，来分担主库的压力。&lt;br&gt;&lt;code&gt;maxscale&lt;/code&gt; 也提供了sql语句的解析过滤功能。这里我们主要讲解 &lt;code&gt;maxscale&lt;/code&gt; 的安装、配置。&lt;/p&gt;
    
    </summary>
    
      <category term="mysql" scheme="https://wglee.org/categories/mysql/"/>
    
    
      <category term="mysql" scheme="https://wglee.org/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>MYSQL 传统主从同步配置</title>
    <link href="https://wglee.org/2018/04/03/mysql-replicate/"/>
    <id>https://wglee.org/2018/04/03/mysql-replicate/</id>
    <published>2018-04-03T07:59:14.000Z</published>
    <updated>2019-02-27T01:53:21.755Z</updated>
    
    <content type="html"><![CDATA[<p>生产环境中为扩展提高 MYSQL 的性能，往往需要配置主从同步，MYSQL 主从同步方式有基于传统和新的 GTID 模式两种，本文将介绍传统的主从同步方式.</p><a id="more"></a><p><em>环境说明</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># cat /etc/redhat-release</span></span><br><span class="line">CentOS release 6.8 (Final)</span><br><span class="line">[root@master ~]<span class="comment"># uname -r</span></span><br><span class="line">2.6.32-642.el6.x86_64</span><br><span class="line">[root@master ~]<span class="comment"># uname -m</span></span><br><span class="line">x86_64</span><br><span class="line">[root@db_master ~]<span class="comment"># mysql --version</span></span><br><span class="line">mysql  Ver 14.14 Distrib 5.6.39, <span class="keyword">for</span> Linux (x86_64) using  EditLine wrapper</span><br></pre></td></tr></table></figure><p><em>服务器列表</em></p><ul><li>master: 192.168.79.12/24</li><li>slave1: 192.168.79.13/24</li><li>slave2: 192.168.79.14/24</li></ul><blockquote><p>MySQL安装请参考：<a href="!--￼7--">MySQL5.6源码编译安装</a></p></blockquote><h2 id="master"><a href="#master" class="headerlink" title="master"></a>master</h2><p><strong>启用 binlog</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># cat /usr/local/mysql/etc/my.cnf</span></span><br><span class="line">[mysqld]</span><br><span class="line"></span><br><span class="line"><span class="comment"># BINARY LOGGING #</span></span><br><span class="line">server-id                      = 12</span><br><span class="line"><span class="built_in">log</span>-bin                        = /usr/<span class="built_in">local</span>/mysql/data/mysql-bin</span><br><span class="line">binlog-format                  = row</span><br><span class="line">expire-logs-days               = 7</span><br><span class="line">sync-binlog                    = 1</span><br></pre></td></tr></table></figure><p><strong>创建同步账号</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; grant replication slave on *.* to <span class="string">'rsync'</span>@<span class="string">'192.168.79.%'</span> identified by <span class="string">'123456'</span>;</span><br><span class="line">mysql&gt; flush privileges;</span><br></pre></td></tr></table></figure><p><strong>导出数据</strong><br>用于创建 <em>slave</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -uroot -p -A --events -B -x --master-data=1 | gzip &gt; all.sql.gz</span><br></pre></td></tr></table></figure><ul><li>-A, –all-databases: 备份所有数据库</li><li>-E, –events: 备份事件</li><li>-B, –databases: 备份的数据库</li><li>-x, –lock-all-tables：锁定所有数据库的所有表</li><li>–master-data=1: 等于1时会将 CHANGE MASTER 命令加入备份文件中</li></ul><h2 id="slave"><a href="#slave" class="headerlink" title="slave"></a>slave</h2><p><em>my.cnf</em></p><p>从库(slave1)用于备份可以启用 binlog, 如果用于读操作可以不启用,只配置 server-id 即可.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@slave1 ~]<span class="comment"># cat /usr/local/mysql/etc/my.cnf</span></span><br><span class="line">[mysqld]</span><br><span class="line">server-id                      = 13</span><br><span class="line"><span class="built_in">log</span>-bin                        = /usr/<span class="built_in">local</span>/mysql/data/mysql-bin</span><br><span class="line">binlog-format                  = row</span><br><span class="line">expire-logs-days               = 7</span><br><span class="line">sync-binlog                    = 1</span><br><span class="line"><span class="built_in">log</span>-slave-updates</span><br></pre></td></tr></table></figure><p><strong>从 master 恢复数据</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@slave1 ~]<span class="comment"># gzip -d all.sql.gz</span></span><br><span class="line">[root@slave1 ~]<span class="comment"># mysql -uroot -p &lt; all.sql</span></span><br></pre></td></tr></table></figure><p><strong>设置主从同步</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从备份文件找到 CHANGE MASTER 命令</span></span><br><span class="line">[root@slave1 ~]<span class="comment"># more all.sql</span></span><br><span class="line">-- CHANGE MASTER TO MASTER_LOG_FILE=<span class="string">'mysql-bin.000002'</span>, MASTER_LOG_POS=1307;</span><br><span class="line"><span class="comment"># 配置 slave</span></span><br><span class="line">mysql&gt; CHANGE MASTER TO</span><br><span class="line">    -&gt; MASTER_HOST=<span class="string">'192.168.79.12'</span>,</span><br><span class="line">    -&gt; MASTER_PORT=3306,</span><br><span class="line">    -&gt; MASTER_USER=<span class="string">'rsync'</span>,</span><br><span class="line">    -&gt; MASTER_PASSWORD=<span class="string">'123456'</span>,</span><br><span class="line">    -&gt; MASTER_LOG_FILE=<span class="string">'mysql-bin.000002'</span>,</span><br><span class="line">    -&gt; MASTER_LOG_POS=1307;</span><br><span class="line">mysql&gt; start slave;</span><br><span class="line">mysql&gt; show slave status\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting <span class="keyword">for</span> master to send event</span><br><span class="line">                  Master_Host: 192.168.79.12</span><br><span class="line">                  Master_User: rsync</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: Yes</span><br><span class="line">        Seconds_Behind_Master: 0</span><br><span class="line">...</span><br></pre></td></tr></table></figure><blockquote><p><code>slave2</code> 和 <code>slave1</code> 操作相同，重复即可. 配置完成可以进行主从同步测试</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;生产环境中为扩展提高 MYSQL 的性能，往往需要配置主从同步，MYSQL 主从同步方式有基于传统和新的 GTID 模式两种，本文将介绍传统的主从同步方式.&lt;/p&gt;
    
    </summary>
    
      <category term="mysql" scheme="https://wglee.org/categories/mysql/"/>
    
    
      <category term="mysql" scheme="https://wglee.org/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>RPM 包制作神器(multipkg)</title>
    <link href="https://wglee.org/2018/03/14/rpm-build-multipkg/"/>
    <id>https://wglee.org/2018/03/14/rpm-build-multipkg/</id>
    <published>2018-03-14T07:56:14.000Z</published>
    <updated>2019-02-27T01:53:21.756Z</updated>
    
    <content type="html"><![CDATA[<p>在生产环境中大多数软件包都会采用编译的方式进行安装，编译安装软件，优点是可以定制化安装目录、按需开启功能等，缺点是需要查找并实验出适合的编译参数，诸如MySQL之类的软件编译耗时过长。<br>如果做成 rpm 然后在搭建一套内部的使用的 yum 仓库就会方便很多。但传统制作 rpm 包的方式但过于复杂难用。本文将介绍一款简单易用 rpm 打包工具 <code>multipkg</code></p><a id="more"></a><h2 id="安装-multipkg"><a href="#安装-multipkg" class="headerlink" title="安装 multipkg"></a>安装 multipkg</h2><ul><li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3l0b29sc2hlZC9tdWx0aXBrZy5naXQ=" title="https://github.com/ytoolshed/multipkg.git">multipkg 源代码仓库<i class="fa fa-external-link"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly95cS5hbGl5dW4uY29tL2FydGljbGVzLzY4MzQ2" title="https://yq.aliyun.com/articles/68346">参考资料<i class="fa fa-external-link"></i></span></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/ytoolshed/multipkg.git</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> multipkg</span><br><span class="line"></span><br><span class="line">yum install perl-YAML-Syck perl-ExtUtils-MakeMaker</span><br><span class="line"></span><br><span class="line">PREFIX=./root PKGVERID=0 INSTALLDIR=<span class="built_in">source</span> scripts/transform</span><br><span class="line">perl -I ./<span class="built_in">source</span>/lib root/usr/bin/multipkg -t .</span><br><span class="line"></span><br><span class="line">sudo yum -y install multipkg-*rpm</span><br><span class="line"></span><br><span class="line">rm multipkg*rpm</span><br><span class="line"></span><br><span class="line">git-multipkg -b https://github.com/ytoolshed/ multipkg</span><br><span class="line"></span><br><span class="line">sudo yum upgrade ./multipkg*rpm</span><br></pre></td></tr></table></figure><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2xpd2FuZ2d1aS9tdWx0aXBrZy1leGFtcGxlcy5naXQ=" title="https://github.com/liwanggui/multipkg-examples.git">示例代码<i class="fa fa-external-link"></i></span> 以 nginx 为例</p><p><strong>nginx 工程目录结构</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">nginx/</span><br><span class="line">├── index.yaml</span><br><span class="line">├── nginx-1.3.10.tar.gz</span><br><span class="line">├── root</span><br><span class="line">│   └── usr</span><br><span class="line">│       └── <span class="built_in">local</span></span><br><span class="line">│           └── nginx</span><br><span class="line">│               ├── conf</span><br><span class="line">│               │   ├── <span class="built_in">enable</span>-ssl-vhost-example.conf</span><br><span class="line">│               │   ├── <span class="built_in">enable</span>-php.conf</span><br><span class="line">│               │   ├── nginx.conf</span><br><span class="line">│               │   ├── pathinfo.conf</span><br><span class="line">│               │   ├── proxy.conf</span><br><span class="line">│               │   └── vhost</span><br><span class="line">│               └── support-file</span><br><span class="line">│                   └── nginx</span><br><span class="line">└── scripts</span><br><span class="line">    ├── build</span><br><span class="line">    ├── post.sh</span><br><span class="line">    └── postun.sh</span><br></pre></td></tr></table></figure><p><strong>目录解释</strong></p><ul><li>root: root 目录中的文件直接提供了 rpm 文件列表和安装路径，目录内的文件会自动加入到生成的 rpm 包中.</li><li>scripts: multipkg 生成 rpm 过程中需要使用的脚本及 rpm 安装前后，卸载前后使用的脚本<ul><li>build: 源码编译安装相关命令</li><li>pre.sh: rpm 包安装前</li><li>post.sh: rpm 包安装后</li><li>preun.sh: rpm 包卸载前</li><li>postun.sh: rpm 包卸载后</li></ul></li></ul><p><strong>生成 rpm 包</strong></p><p>在工程目录执行以下命令生成 rpm 包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost nginx]<span class="comment"># multipkg .</span></span><br><span class="line">nginx-1.3.10-0.1521267394.x86_64.rpm</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在生产环境中大多数软件包都会采用编译的方式进行安装，编译安装软件，优点是可以定制化安装目录、按需开启功能等，缺点是需要查找并实验出适合的编译参数，诸如MySQL之类的软件编译耗时过长。&lt;br&gt;如果做成 rpm 然后在搭建一套内部的使用的 yum 仓库就会方便很多。但传统制作 rpm 包的方式但过于复杂难用。本文将介绍一款简单易用 rpm 打包工具 &lt;code&gt;multipkg&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="linux" scheme="https://wglee.org/categories/linux/"/>
    
    
      <category term="rpm" scheme="https://wglee.org/tags/rpm/"/>
    
  </entry>
  
  <entry>
    <title>Percona-XtraBackup 快速重建 MYSQL 从库</title>
    <link href="https://wglee.org/2018/03/14/mysql-slave-restore-2/"/>
    <id>https://wglee.org/2018/03/14/mysql-slave-restore-2/</id>
    <published>2018-03-14T07:56:14.000Z</published>
    <updated>2019-02-27T01:53:21.755Z</updated>
    
    <content type="html"><![CDATA[<p>The Percona XtraBackup tools provide a method of performing a hot backup of your MySQL data while the system is running. Percona XtraBackup is a free, online, open source, complete database backups solution for all versions of Percona Server for MySQL, MySQL® and MariaDB®. Percona XtraBackup performs online non-blocking, tightly compressed, highly secure full backups on transactional systems so that applications remain fully available during planned maintenance windows.</p><p>本文将介绍如何使用 xtrabackup 快速重建 MYSQL 从库<br><a id="more"></a></p><h2 id="安装-Percona-XtraBackup"><a href="#安装-Percona-XtraBackup" class="headerlink" title="安装 Percona-XtraBackup"></a>安装 Percona-XtraBackup</h2><ul><li>mysql-5.6 安装 Percona-XtraBackup-2.3.x</li><li>mysql-5.7 安装 Percona-XtraBackup-2.4.x</li></ul><p><span class="exturl" data-url="aHR0cHM6Ly93d3cucGVyY29uYS5jb20vZG93bmxvYWRzL1h0cmFCYWNrdXAvTEFURVNULw==" title="https://www.percona.com/downloads/XtraBackup/LATEST/">下载地址<i class="fa fa-external-link"></i></span></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install http://www.percona.com/downloads/percona-release/redhat/0.1-4/percona-release-0.1-4.noarch.rpm</span><br><span class="line">yum install percona-xtrabackup</span><br></pre></td></tr></table></figure><blockquote><p>Tips: 1. 以上 rpm 安装链接可能会过期，请从官网获取。 2. 如果提示依赖问题请安装 epel 源 <code>yum install epel-release</code></p></blockquote><h2 id="备份主库-全备"><a href="#备份主库-全备" class="headerlink" title="备份主库(全备)"></a>备份主库(全备)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">innobackupex --defaults-file=/usr/<span class="built_in">local</span>/mysql/my.cnf -S /usr/<span class="built_in">local</span>/mysql/data/mysql.sock --user=root --password=wglee  /data/backup/</span><br></pre></td></tr></table></figure><pre><code>- --defaults-file: 指定 my.cnf 配置文件- -S: 指定 mysql.sock 文件路径- --user: 连接备份数据库使用的用户名- --password: 密码- /data/backup/: 备份文件存放的路径</code></pre><h2 id="创建主库"><a href="#创建主库" class="headerlink" title="创建主库"></a>创建主库</h2><p><em>配置从库 my.cnf</em></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="attr">server-id</span>=<span class="number">133</span></span><br></pre></td></tr></table></figure><p><em>拷贝主库备份文件至从库</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -r /data/backup/2018-03-14_15-10-57 slave:/data/backup/</span><br></pre></td></tr></table></figure><p><em>备份还原前期准备</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 停止数据库服务</span></span><br><span class="line">/etc/init.d/mysqld stop</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/mysql</span><br><span class="line"><span class="comment"># 将 datadir 重命名，因为 innobackupex 恢复数据时 datadir 不能有数据</span></span><br><span class="line">mv data data_ori</span><br></pre></td></tr></table></figure><p><em>准备备份</em></p><p>一般情况下，在备份完成后，数据尚且不能用于恢复操作，因为备份的数据中可能会包含尚未提交的事务或已经提交但尚未同步至数据文件中的事务。因此，此时数据文件仍处理不一致状态。“准备” 的主要作用正是通过回滚未提交的事务及同步已经提交的事务至数据文件也使得数据文件处于一致性状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">innobackupex --apply-log /data/backup/2018-03-14_15-10-57</span><br></pre></td></tr></table></figure><div class="note info"><p>在实现“准备”的过程中，innobackupex 通常还可以使用 –use-memory 选项来指定其可以使用的内存的大小，默认通常为 100M。如果有足够的内存可用，可以多划分一些内存给 prepare 的过程，以提高其完成速度。</p></div><p><em>从备份恢复数据至从库</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">innobackupex --defaults-file=/usr/<span class="built_in">local</span>/mysql/my.cnf --copy-back /data/backup/2018-03-14_15-10-57</span><br></pre></td></tr></table></figure><blockquote><p>如果服务器剩余空间不足，你可以使用 <code>--move-back</code> 替换掉 <code>--copy-back</code></p></blockquote><p><em>修改相应权限</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown -R mysql.mysql /usr/<span class="built_in">local</span>/mysql/data</span><br></pre></td></tr></table></figure><p><em>启动从库，配置 slave</em></p><p>查看备份文件 xtrabackup_binlog_info 获取 MASTER_LOG_FILE, MASTER_LOG_POS。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CHANGE MASTER TO</span><br><span class="line">MASTER_HOST=<span class="string">'&lt;master_host&gt;'</span>,</span><br><span class="line">MASTER_USER=<span class="string">'&lt;slave_username&gt;'</span>,</span><br><span class="line">MASTER_PASSWORD=<span class="string">'&lt;slave_password&gt;'</span>,</span><br><span class="line">MASTER_LOG_FILE=<span class="string">'&lt;see xtrabackup_binlog_info&gt;'</span>,</span><br><span class="line">MASTER_LOG_POS=&lt;see xtrabackup_binlog_info&gt;;</span><br></pre></td></tr></table></figure><p><em>启动 slave</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">start slave;</span><br></pre></td></tr></table></figure><p><em>查看从库状态</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show slave status\G;</span><br></pre></td></tr></table></figure><div class="note info"><p>用 <code>innobackupex</code> 备份数据时，<code>–apply-log</code> 处理过的备份数据里有两个文件说明该备份数据对应的 binlog 的文件名和位置。但有时这俩文件说明的位置可能会不同。</p><p>1) 对于纯 <code>InnoDB</code> 操作，备份出来的数据中上述两个文件的内容是一致的<br>2) 对于 <code>InnoDB</code> 和非事务存储引擎混合操作，<code>xtrabackup_binlog_info</code> 中所示的 <code>position</code> 应该会比 <code>xtrabackup_pos_innodb</code> 所示的数值大。此时应以 <code>xtrabackup_binlog_info</code> 为准；而后者和 <code>apply-log</code> 时 <code>InnoDB</code> recovery log 中显示的内容是一致的，只针对 <code>InnoDB</code> 这部分数据。</p><p><span class="exturl" data-url="aHR0cHM6Ly9zZWdtZW50ZmF1bHQuY29tL2EvMTE5MDAwMDAwMjU3NTM5OQ==" title="https://segmentfault.com/a/1190000002575399">参考地址<i class="fa fa-external-link"></i></span></p></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;The Percona XtraBackup tools provide a method of performing a hot backup of your MySQL data while the system is running. Percona XtraBackup is a free, online, open source, complete database backups solution for all versions of Percona Server for MySQL, MySQL® and MariaDB®. Percona XtraBackup performs online non-blocking, tightly compressed, highly secure full backups on transactional systems so that applications remain fully available during planned maintenance windows.&lt;/p&gt;
&lt;p&gt;本文将介绍如何使用 xtrabackup 快速重建 MYSQL 从库&lt;br&gt;
    
    </summary>
    
      <category term="mysql" scheme="https://wglee.org/categories/mysql/"/>
    
    
      <category term="mysql" scheme="https://wglee.org/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>快速重建 MYSQL 从库 (mysqldump)</title>
    <link href="https://wglee.org/2018/03/14/mysql-slave-restore-1/"/>
    <id>https://wglee.org/2018/03/14/mysql-slave-restore-1/</id>
    <published>2018-03-14T02:28:14.000Z</published>
    <updated>2019-02-27T01:53:21.755Z</updated>
    
    <content type="html"><![CDATA[<p>工作中使用 MYSQL 5.6 传统同步方式，从库难免会出现各种问题需要恢复或者重建，本文将介绍如何快速创建/重建从库</p><a id="more"></a><h2 id="全备主库"><a href="#全备主库" class="headerlink" title="全备主库"></a>全备主库</h2><p>通过以下命令全备主库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -uroot -p<span class="string">'wglee.org'</span> -A --events -B -x --master-data=1 | gzip &gt; $(date +%F).sql.gz</span><br></pre></td></tr></table></figure><ul><li>-A, –all-databases: 备份所有数据库</li><li>-E, –events: 备份事件</li><li>-B, –databases:  备份的数据库</li><li>-x, –lock-all-tables：锁定所有数据库的所有表</li><li>–master-data=1: 等于1时会将 CHANGE MASTER 命令加入备份文件中</li></ul><div class="note info"><p>注意，备份过程中会锁表，请不要在业务运行过程中执行，切记… 将备份文件复制至从库</p></div><h2 id="创建从库"><a href="#创建从库" class="headerlink" title="创建从库"></a>创建从库</h2><h3 id="配置从库的-my-cnf-略"><a href="#配置从库的-my-cnf-略" class="headerlink" title="配置从库的 my.cnf (略)"></a>配置从库的 my.cnf (略)</h3><h3 id="查找到备份文件中的-CHANGE-MASTER-语句-获取-MASTER-LOG-FILE-MASTER-LOG-POS-配置"><a href="#查找到备份文件中的-CHANGE-MASTER-语句-获取-MASTER-LOG-FILE-MASTER-LOG-POS-配置" class="headerlink" title="查找到备份文件中的 CHANGE MASTER 语句, 获取 MASTER_LOG_FILE, MASTER_LOG_POS 配置"></a>查找到备份文件中的 <code>CHANGE MASTER</code> 语句, 获取 <code>MASTER_LOG_FILE</code>, <code>MASTER_LOG_POS</code> 配置</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep '^CHANGE MASTER' <span class="number">2018</span><span class="number">-03</span><span class="number">-14.</span>sql</span><br></pre></td></tr></table></figure><h3 id="将备份文件导入至从库"><a href="#将备份文件导入至从库" class="headerlink" title="将备份文件导入至从库"></a>将备份文件导入至从库</h3><h3 id="在从库上执行-CHANGE-MASTER-语句-启用主从同步功能"><a href="#在从库上执行-CHANGE-MASTER-语句-启用主从同步功能" class="headerlink" title="在从库上执行 CHANGE MASTER 语句, 启用主从同步功能"></a>在从库上执行 <code>CHANGE MASTER</code> 语句, 启用主从同步功能</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">CHANGE MASTER TO</span><br><span class="line">MASTER_USER=<span class="string">'sync'</span>,</span><br><span class="line">MASTER_PORT=3306,</span><br><span class="line">MASTER_HOST=<span class="string">'192.168.79.132'</span>,</span><br><span class="line">MASTER_PASSWORD=<span class="string">'123456'</span>,</span><br><span class="line">MASTER_LOG_FILE=<span class="string">'mysql-bin.000003'</span>,</span><br><span class="line">MASTER_LOG_POS=120;</span><br></pre></td></tr></table></figure><h3 id="检查从库状态"><a href="#检查从库状态" class="headerlink" title="检查从库状态"></a>检查从库状态</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show slave status\G</span><br></pre></td></tr></table></figure><div class="note info"><p>最后测试主从同步</p></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;工作中使用 MYSQL 5.6 传统同步方式，从库难免会出现各种问题需要恢复或者重建，本文将介绍如何快速创建/重建从库&lt;/p&gt;
    
    </summary>
    
      <category term="mysql" scheme="https://wglee.org/categories/mysql/"/>
    
    
      <category term="mysql" scheme="https://wglee.org/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>MYSQL 管理</title>
    <link href="https://wglee.org/2018/01/14/mysql-manage/"/>
    <id>https://wglee.org/2018/01/14/mysql-manage/</id>
    <published>2018-01-14T07:56:14.000Z</published>
    <updated>2019-02-27T01:53:21.754Z</updated>
    
    <content type="html"><![CDATA[<p>MYSQL 数据库基本管理命令，创建用户，授权，设置密码，备份，恢复，表结构更改等…</p><a id="more"></a><h2 id="用户权限管理"><a href="#用户权限管理" class="headerlink" title="用户权限管理"></a>用户权限管理</h2><blockquote><p>进行数据库基本信息相关更改后请使用 <code>flush privileges;</code> 刷新数据库信息</p></blockquote><h3 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建用户（默认密码为空）</span></span><br><span class="line">mysql&gt; create user <span class="string">'username'</span>@<span class="string">'host'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建用户并设置密码</span></span><br><span class="line">mysql&gt; create user <span class="string">'username'</span>@<span class="string">'host'</span> identified by <span class="string">'password'</span>;</span><br></pre></td></tr></table></figure><h3 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; drop user <span class="string">'username'</span>@<span class="string">'host'</span>;</span><br></pre></td></tr></table></figure><h3 id="更改密码"><a href="#更改密码" class="headerlink" title="更改密码"></a>更改密码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 更改密码 （只对当前登录账号有效）</span></span><br><span class="line">mysql&gt; <span class="built_in">set</span> password=password(<span class="string">'123456'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 更改指定用户的密码</span></span><br><span class="line">mysql&gt; <span class="built_in">set</span> password <span class="keyword">for</span> <span class="string">'username'</span>@<span class="string">'host'</span>=password(<span class="string">'123456'</span>);</span><br></pre></td></tr></table></figure><h3 id="查询用户权限"><a href="#查询用户权限" class="headerlink" title="查询用户权限"></a>查询用户权限</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查询当前账号的权限</span></span><br><span class="line">mysql&gt; show grants;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询指定账号的权限</span></span><br><span class="line">mysql&gt; show grants <span class="keyword">for</span> <span class="string">'user'</span>@<span class="string">'host'</span>;</span><br></pre></td></tr></table></figure><h3 id="用户授权"><a href="#用户授权" class="headerlink" title="用户授权"></a>用户授权</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 对用户授权（如果用户存在就增加权限，不存在就创建用户不过密码为空）</span></span><br><span class="line">mysql&gt; grant privileges on databasename.tablename to <span class="string">'username'</span>@<span class="string">'host'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对用户授权并设置密码（如果用户存在就增加权限，不存在就创建用户）</span></span><br><span class="line">mysql&gt; grant privileges on databasename.tablename to <span class="string">'username'</span>@<span class="string">'host'</span> identified by <span class="string">'password'</span>;</span><br></pre></td></tr></table></figure><blockquote><p>privileges: 权限列表以逗号隔开，例如： select, insert,update</p></blockquote><h3 id="用户权限回收"><a href="#用户权限回收" class="headerlink" title="用户权限回收"></a>用户权限回收</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; revoke privilege on databasename.tablename from <span class="string">'user'</span>@<span class="string">'host'</span>;</span><br></pre></td></tr></table></figure><blockquote><p>注：数据库名要用反撇号引起，或者不用</p></blockquote><h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><h3 id="数据库的基本操作"><a href="#数据库的基本操作" class="headerlink" title="数据库的基本操作"></a>数据库的基本操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示数据库</span></span><br><span class="line">mysql&gt; show databases;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建数据库</span></span><br><span class="line">mysql&gt; create database DATABASENAME;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看数据库创建语句</span></span><br><span class="line">mysql&gt; show create database DATABASENAME</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除数据库</span></span><br><span class="line">mysql&gt; drop database DATABASENAME;</span><br></pre></td></tr></table></figure><h3 id="备份数据库数据及表结构"><a href="#备份数据库数据及表结构" class="headerlink" title="备份数据库数据及表结构"></a>备份数据库数据及表结构</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 备份整个数据库</span></span><br><span class="line">[root@localhost ~]<span class="comment"># mysqldump -uroot -p -A &gt; all.sql</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 备份整个数据库的结构</span></span><br><span class="line">[root@localhost ~]<span class="comment"># mysqldump -uroot -p -A -d &gt; all.sql</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 备份单个数据库</span></span><br><span class="line">[root@localhost ~]<span class="comment"># mysqldump -uroot -p DATABASENAME &gt; DATABASENAME.sql</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 一次备份多个数据库</span></span><br><span class="line">[root@localhost ~]<span class="comment"># mysqldump -uroot -p --databases db1 db2 &gt; dbs.sql</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 备份数据库中指定的表</span></span><br><span class="line">[root@localhost ~]<span class="comment"># mysqldump -uroot -p DATABASENAME TABLENAME &gt; DATABASENAME_TABLENAME.sql</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 一次备份数据库中指定的多张表</span></span><br><span class="line">[root@localhost ~]<span class="comment"># mysqldump -uroot -p DATABASENAME t1 t2 &gt; DATABASENAME_ts.sql</span></span><br></pre></td></tr></table></figure><ul><li><code>-A</code>, <code>--all-databases</code> : 备份所有数据库</li><li><code>-d</code>, <code>--no-data</code> ：只导出表结构</li></ul><h3 id="导出函数或者存储过程"><a href="#导出函数或者存储过程" class="headerlink" title="导出函数或者存储过程"></a>导出函数或者存储过程</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -hHOSTNAME -uUSERNAME -pPASSWORD -ntd -R DATABASENAME &gt; DATABASENAME.sql</span><br></pre></td></tr></table></figure><ul><li><code>-ntd</code> 是表示导出存储过程；</li><li><code>-R</code> 是表示导出函数</li></ul><h3 id="恢复数据库数据"><a href="#恢复数据库数据" class="headerlink" title="恢复数据库数据"></a>恢复数据库数据</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用系统命令</span></span><br><span class="line">[root@localhost ~]<span class="comment"># mysql -uroot DATABASENAME &lt; DATABASENAME.sql</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 source 命令</span></span><br><span class="line">mysql&gt; use lwg;</span><br><span class="line">Database changed</span><br><span class="line">mysql&gt; <span class="built_in">source</span> /root/lwg.sql;</span><br></pre></td></tr></table></figure><blockquote><p><em>Tips</em>: 恢复数据时，如果数据库不存在需要先创建</p></blockquote><h2 id="数据表"><a href="#数据表" class="headerlink" title="数据表"></a>数据表</h2><h3 id="表的基本操作"><a href="#表的基本操作" class="headerlink" title="表的基本操作"></a>表的基本操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看数据库下所有的表</span></span><br><span class="line">mysql&gt; show tables;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建表</span></span><br><span class="line">mysql&gt; CREATE TABLE `TABLENAME` (</span><br><span class="line">  `id` int(10) NOT NULL PRIMARY KEY AUTO_INCREMENT,</span><br><span class="line">  `user` varchar(30) NOT NULL,</span><br><span class="line">  `password` varchar(30) NOT NULL</span><br><span class="line">) ENGINE=MyISAM DEFAULT CHARSET=utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示表结构</span></span><br><span class="line">mysql&gt; desc TABLENAME;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示表创建语句</span></span><br><span class="line">mysql&gt; show create table TABLENAME;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清空表数据</span></span><br><span class="line">mysql&gt; truncate table TABLENAME;</span><br><span class="line">mysql&gt; delete from TABLENAME;</span><br></pre></td></tr></table></figure><blockquote><p>不带 <code>where</code> 参数的 <code>delete</code> 语句可以删除 <code>mysql</code> 表中所有内容<br>使用 <code>truncate table</code> 也可以清空 <code>mysql</code> 表中所有内容。<br>效率上 <code>truncate</code> 比 <code>delete</code> 快，但 <code>truncate</code> 删除后不记录 <code>mysql</code> 日志，不可以恢复数据。<br><code>delete</code> 的效果有点像将 <code>mysql</code> 表中所有记录一条一条删除到删完，<br>而 <code>truncate</code> 相当于保留 <code>mysql</code> 表的结构，重新创建了这个表，所有的状态都相当于新表。<br>所以 <code>delete</code> 不会重置 ID 列，而 <code>truncat</code> 会重置。</p></blockquote><h3 id="表-alter-的相关操作"><a href="#表-alter-的相关操作" class="headerlink" title="表 alter 的相关操作"></a>表 <code>alter</code> 的相关操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 增加一个字段(一列),并放到第一列的位置 (first)</span></span><br><span class="line">mysql&gt; desc users;</span><br><span class="line">+------------+----------+------+-----+---------+-------+</span><br><span class="line">| Field      | Type     | Null | Key | Default | Extra |</span><br><span class="line">+------------+----------+------+-----+---------+-------+</span><br><span class="line">| username   | char(30) | NO   | PRI | NULL    |       |</span><br><span class="line">| userpasswd | char(20) | NO   |     | 123456  |       |</span><br><span class="line">+------------+----------+------+-----+---------+-------+</span><br><span class="line">2 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; alter table users add column id int not null first;</span><br><span class="line">Query OK, 0 rows affected (0.08 sec)</span><br><span class="line">Records: 0  Duplicates: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">mysql&gt; desc users;</span><br><span class="line">+------------+----------+------+-----+---------+-------+</span><br><span class="line">| Field      | Type     | Null | Key | Default | Extra |</span><br><span class="line">+------------+----------+------+-----+---------+-------+</span><br><span class="line">| id         | int(11)  | NO   |     | NULL    |       |</span><br><span class="line">| username   | char(30) | NO   | PRI | NULL    |       |</span><br><span class="line">| userpasswd | char(20) | NO   |     | 123456  |       |</span><br><span class="line">+------------+----------+------+-----+---------+-------+</span><br><span class="line">3 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除一个字段</span></span><br><span class="line">mysql&gt; alter table users drop userpasswd;</span><br><span class="line">Query OK, 0 rows affected (0.05 sec)</span><br><span class="line">Records: 0  Duplicates: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">mysql&gt; desc users;</span><br><span class="line">+----------+----------+------+-----+---------+-------+</span><br><span class="line">| Field    | Type     | Null | Key | Default | Extra |</span><br><span class="line">+----------+----------+------+-----+---------+-------+</span><br><span class="line">| id       | int(11)  | NO   |     | NULL    |       |</span><br><span class="line">| username | char(30) | NO   | PRI | NULL    |       |</span><br><span class="line">+----------+----------+------+-----+---------+-------+</span><br><span class="line">2 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更改列的字段类型</span></span><br><span class="line">mysql&gt; alter table users modify username varchar(100);</span><br><span class="line">Query OK, 2 rows affected (0.14 sec)</span><br><span class="line">Records: 2  Duplicates: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">mysql&gt; desc users;</span><br><span class="line">+----------+--------------+------+-----+---------+-------+</span><br><span class="line">| Field    | Type         | Null | Key | Default | Extra |</span><br><span class="line">+----------+--------------+------+-----+---------+-------+</span><br><span class="line">| id       | int(11)      | NO   |     | NULL    |       |</span><br><span class="line">| username | varchar(100) | NO   | PRI |         |       |</span><br><span class="line">+----------+--------------+------+-----+---------+-------+</span><br><span class="line">2 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更改列名及字段类型</span></span><br><span class="line">mysql&gt; alter table users change username user varchar(20);</span><br><span class="line">Query OK, 2 rows affected (0.03 sec)</span><br><span class="line">Records: 2  Duplicates: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">mysql&gt; desc users;</span><br><span class="line">+-------+-------------+------+-----+---------+-------+</span><br><span class="line">| Field | Type        | Null | Key | Default | Extra |</span><br><span class="line">+-------+-------------+------+-----+---------+-------+</span><br><span class="line">| id    | int(11)     | NO   |     | NULL    |       |</span><br><span class="line">| user  | varchar(20) | NO   | PRI |         |       |</span><br><span class="line">+-------+-------------+------+-----+---------+-------+</span><br><span class="line">2 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改表的存储引擎</span></span><br><span class="line">mysql&gt; show create table users;</span><br><span class="line">+-------+---------------------------------------+</span><br><span class="line">| Table | Create Table                          |</span><br><span class="line">+-------+---------------------------------------+</span><br><span class="line">| users | CREATE TABLE `users` (</span><br><span class="line">  `id` int(11) NOT NULL,</span><br><span class="line">  `user` varchar(20) NOT NULL DEFAULT <span class="string">''</span>,</span><br><span class="line">  PRIMARY KEY (`user`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8 |</span><br><span class="line">+-------+---------------------------------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; alter table users ENGINE=myisam;</span><br><span class="line">Query OK, 2 rows affected (0.01 sec)</span><br><span class="line">Records: 2  Duplicates: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这里我们使用另一种方法查询表的默认引擎</span></span><br><span class="line">mysql&gt; show table status from lwg <span class="built_in">where</span> name=<span class="string">'users'</span>\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">           Name: users</span><br><span class="line">         Engine: MyISAM</span><br><span class="line">        Version: 10</span><br><span class="line">     Row_format: Dynamic</span><br><span class="line">           Rows: 2</span><br><span class="line"> Avg_row_length: 20</span><br><span class="line">    Data_length: 40</span><br><span class="line">Max_data_length: 281474976710655</span><br><span class="line">   Index_length: 2048</span><br><span class="line">      Data_free: 0</span><br><span class="line"> Auto_increment: NULL</span><br><span class="line">    Create_time: 2017-08-25 04:15:46</span><br><span class="line">    Update_time: 2017-08-25 04:15:46</span><br><span class="line">     Check_time: NULL</span><br><span class="line">      Collation: utf8_general_ci</span><br><span class="line">       Checksum: NULL</span><br><span class="line"> Create_options:</span><br><span class="line">        Comment:</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MYSQL 数据库基本管理命令，创建用户，授权，设置密码，备份，恢复，表结构更改等…&lt;/p&gt;
    
    </summary>
    
      <category term="mysql" scheme="https://wglee.org/categories/mysql/"/>
    
    
      <category term="mysql" scheme="https://wglee.org/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>SHELL 脚本加密</title>
    <link href="https://wglee.org/2017/12/08/shell-encryption/"/>
    <id>https://wglee.org/2017/12/08/shell-encryption/</id>
    <published>2017-12-08T08:04:57.000Z</published>
    <updated>2019-02-27T01:53:21.756Z</updated>
    
    <content type="html"><![CDATA[<p>在日常工作中经常会写一些脚本来提高工作效率（懒惰是美德），但脚本中难免会有一些敏感信息，例如数据库密码，服务器账号密码等。如何才能有效隐藏或者加密脚本使之成为密文以提高安全性呢？通过在网上搜索实践终于找到了解决方法，下面就介绍 shell 脚本 如何加密。（个人认为比较实用的，当然还有其他方法）</p><a id="more"></a><img src="/2017/12/08/shell-encryption/example.png" title="示例"><p>通过上图脚本中的前部分代码我们可以知道脚本将以 “<strong>END</strong>“ 字符开头的行之后所有行的内容通过管道传输给你 <code>tar</code> 程序进行解压，最后在运行解压出来的脚本。</p><blockquote><p>Tips: 这个脚本文件是不可以更改的，更改后将无法正常执行。</p></blockquote><p>下面举例说明</p><p><em>第一步：我们写一个简单的脚本 <code>ip.sh</code> (获取本机的公网的 IP)</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">curl ifconfig.me</span><br></pre></td></tr></table></figure><p>第二步：写一个对外的脚本 <code>test.sh</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">run=<span class="string">"ip.sh"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">main</span></span>() &#123;</span><br><span class="line">    LINE=$(awk <span class="string">'/^_END_/ &#123;print NR + 1&#125;'</span> <span class="string">"<span class="variable">$0</span>"</span>)</span><br><span class="line">    BASE_DIR=$(mktemp -d)</span><br><span class="line"></span><br><span class="line">    tail -n +<span class="string">"<span class="variable">$LINE</span>"</span> <span class="variable">$0</span> | tar xzm -C <span class="variable">$BASE_DIR</span></span><br><span class="line">    <span class="built_in">cd</span> <span class="variable">$BASE_DIR</span></span><br><span class="line">    /bin/sh <span class="variable">$1</span></span><br><span class="line">    /bin/rm -rf <span class="variable">$BASE_DIR</span></span><br><span class="line">    <span class="built_in">exit</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">main <span class="variable">$run</span></span><br><span class="line"></span><br><span class="line">_END_</span><br></pre></td></tr></table></figure><p>第三步： 使用 <code>tar</code> 工具将 <code>ip.sh</code> 压缩并追加到 <code>test.sh</code> 脚本文件中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar czm ip.sh &gt;&gt; test.sh</span><br></pre></td></tr></table></figure><img src="/2017/12/08/shell-encryption/test.png" title="最终结果"><p>最后我们就得到了一个简单并加密脚本文件了。正常执行下看看结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sh test.sh</span></span><br><span class="line">183.63.xxx.xxx</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在日常工作中经常会写一些脚本来提高工作效率（懒惰是美德），但脚本中难免会有一些敏感信息，例如数据库密码，服务器账号密码等。如何才能有效隐藏或者加密脚本使之成为密文以提高安全性呢？通过在网上搜索实践终于找到了解决方法，下面就介绍 shell 脚本 如何加密。（个人认为比较实用的，当然还有其他方法）&lt;/p&gt;
    
    </summary>
    
      <category term="bash" scheme="https://wglee.org/categories/bash/"/>
    
    
      <category term="bash" scheme="https://wglee.org/tags/bash/"/>
    
  </entry>
  
</feed>
